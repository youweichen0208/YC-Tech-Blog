import{_ as e,o as a,c as n,e as i}from"./app-zu34Hue5.js";const t={},o=i('<h1 id="docker" tabindex="-1"><a class="header-anchor" href="#docker" aria-hidden="true">#</a> Docker</h1><h2 id="what-is-docker" tabindex="-1"><a class="header-anchor" href="#what-is-docker" aria-hidden="true">#</a> What is Docker</h2><p>Docker is an open-source platform that allows developers to build, deploy, and run applications inside containers. A container is a lightweight, standalone, executable package that includes everything needed to run an application, including the code, runtime, system libraries, and system settings.</p><ul><li><p><strong>Portability</strong>: Containers package up an application and all its dependencies into a single image, which can run consistently across different environments(development, testing, production) and operating systems (Linux, Windows).</p></li><li><p><strong>Isolation</strong>: Containers are isolated from each other and from the host operating system, providing an additional layer of security and preventing conflicts between applications or between an application and the host.</p></li><li><p><strong>Resource Efficiency</strong>: Containers are lightweight and require fewer resources than traditional virtual machines, allowing more containers to run on the same hardware compared to VMs.</p></li><li><p><strong>Scalability</strong>: Docker containers are designed to be easily scalable, allowing applications to quickly scale up or down based on demand.</p></li><li><p><strong>Continunous Deployment and Delivery</strong>: Docker facilitates the continuous delivery and deployment of applications by providing a consistent environment for deployment, testing, and production.</p></li></ul><h2 id="docker-client" tabindex="-1"><a class="header-anchor" href="#docker-client" aria-hidden="true">#</a> Docker Client:</h2><p>The Docker client is the primary way for users to interact with Docker. It is a command-line interface (CLI) tool that communicates with the Docker daemon and instructs it to perform various operations. When we run Docker commands like <code>docker run</code>, <code>docker build</code>, <code>docker pull</code>, etc., we are typically sending these commands to the Docker daemon via the Docker client.</p><h2 id="docker-daemon" tabindex="-1"><a class="header-anchor" href="#docker-daemon" aria-hidden="true">#</a> Docker Daemon:</h2><p>The Docker daemon is a long-running program that manages and facilitates Docker objects like images, containers, networks, and volumns. It listens for Docker API requests and processes them accordingly. The Docker daemon is responsible for tasks such as:</p><ol><li><p><strong>Building images</strong>: When we run <code>docker build</code>, the daemon builds the Docker image by reading the instructions from the Dockerfile.</p></li><li><p><strong>Running containers</strong>: When we run <code>docker run</code>, the daemon creates and runs a new container from a Docker image.</p></li><li><p><strong>Distributing images</strong>: The daemon is responsible for pulling images from a registry (e.g., Docker Hub) and pushing images to a registry.</p></li><li><p><strong>Managing containers</strong>: The daemon starts, stops, restarts, kills, and manages the lifecycle of containers.</p></li><li><p><strong>Networking</strong>: The daemon provides networking capabilities like port mapping and connecting containers to networks.</p></li><li><p><strong>Storage management</strong>: The daemon manages the storage of images and containers, including volumn management.</p></li></ol><h2 id="image" tabindex="-1"><a class="header-anchor" href="#image" aria-hidden="true">#</a> Image:</h2><p>An image is a read-only template that contains a set of instructions for creating a Docker container. It defines the operating system, dependencies, and application code required for running a particular software. Images are built from a set of instructions called a Docker file. Images are designed to be lightweight, secure, and immutable. Docker Hub is a popular public registry for hosting and sharing Docker images.</p><h2 id="container" tabindex="-1"><a class="header-anchor" href="#container" aria-hidden="true">#</a> Container:</h2><p>A container is a runtime instance of a Docker image. It is a lightweight, isolated, and standalone executable package that includes everything needed to run an application, such as code, runtime, system tools, and libraries. Containers share the host operating system&#39;s kernel but are isolated from each other and the host system&#39;s resources(CPU, memorym storage, network). Containers are designed to be ephemeral and disposable.</p><h2 id="volumns" tabindex="-1"><a class="header-anchor" href="#volumns" aria-hidden="true">#</a> Volumns:</h2><p>Volumns are the preferred mechanism for persisting data generated by and used by Docker containers. They are designed to be outlive the containers themsevles, providing a way to persist and share data between containers. Volumns are stored on the host filesystem and can be managed by Docker or bind-mounted from directories on the host.</p><h2 id="builds" tabindex="-1"><a class="header-anchor" href="#builds" aria-hidden="true">#</a> Builds:</h2><p>Building is the process of creating a Docker image from a set of instructions defined in a Dockerfile. The <code>docker build</code> command is used to build images from a Docker file. A Dockerfile is a text file that contains all the commands needed to create an image, such as installing dependencies, copying files, setting environment variables, and defining the entry point for the container.</p><h2 id="dockerfile" tabindex="-1"><a class="header-anchor" href="#dockerfile" aria-hidden="true">#</a> Dockerfile:</h2><p>A Dockerfile is a text file that contains a set of instructions for building a Docker image.</p><h2 id="docker-registry" tabindex="-1"><a class="header-anchor" href="#docker-registry" aria-hidden="true">#</a> Docker Registry:</h2><p>A Docker registry is a service tha stores and distributes Docker images. Docker Hub is the default public registry maintained by Docker. It allows users to pull public images or push their own images to a private repository.</p>',21),r=[o];function s(c,d){return a(),n("div",null,r)}const h=e(t,[["render",s],["__file","docker.html.vue"]]);export{h as default};
