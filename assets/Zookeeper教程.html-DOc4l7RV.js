import{_ as i,r as d,o as r,c as t,a as e,b as a,d as n,e as o}from"./app-6xODO_ZE.js";const l={},c=o(`<h1 id="zookeeper-教程-量化交易平台实战" tabindex="-1"><a class="header-anchor" href="#zookeeper-教程-量化交易平台实战" aria-hidden="true">#</a> Zookeeper 教程 - 量化交易平台实战</h1><h2 id="什么是-zookeeper" tabindex="-1"><a class="header-anchor" href="#什么是-zookeeper" aria-hidden="true">#</a> 什么是 Zookeeper？</h2><p><strong>Zookeeper</strong> 是一个分布式协调服务，可以理解为<strong>微服务的通讯录</strong>。</p><h3 id="形象比喻" tabindex="-1"><a class="header-anchor" href="#形象比喻" aria-hidden="true">#</a> 形象比喻</h3><p>想象你在一个大公司：</p><ul><li><strong>没有Zookeeper</strong>：你要找财务部，得自己记住&quot;财务部在3楼305室&quot;，如果财务部搬家了，你就找不到了</li><li><strong>有Zookeeper</strong>：你去前台问&quot;财务部在哪？&quot;，前台告诉你最新位置，财务部搬家了前台也知道</li></ul><h2 id="在你的量化交易平台中的作用" tabindex="-1"><a class="header-anchor" href="#在你的量化交易平台中的作用" aria-hidden="true">#</a> 在你的量化交易平台中的作用</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>用户服务 (user-service)      ─┐
交易服务 (trading-service)    ├─→ 注册到 Zookeeper
数据分析服务 (analysis-service) ─┤      ↓
策略服务 (strategy-service)   ─┘   &quot;我在 192.168.1.100:20880&quot;
                                        ↓
API Gateway 想调用用户服务 ─→ 问 Zookeeper ─→ 得到地址并调用
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="核心功能" tabindex="-1"><a class="header-anchor" href="#核心功能" aria-hidden="true">#</a> 核心功能</h3><ol><li><p><strong>服务注册与发现</strong></p><ul><li>服务启动时：向Zookeeper注册自己的地址</li><li>服务调用时：从Zookeeper查询目标服务的地址</li></ul></li><li><p><strong>配置管理</strong></p><ul><li>统一管理配置：数据库连接、API密钥等</li><li>配置修改后所有服务自动感知</li></ul></li><li><p><strong>集群协调</strong></p><ul><li>选主：多个服务实例中选出Leader</li><li>分布式锁：防止多个服务同时操作同一资源</li></ul></li></ol><hr><h2 id="zookeeper-数据模型" tabindex="-1"><a class="header-anchor" href="#zookeeper-数据模型" aria-hidden="true">#</a> Zookeeper 数据模型</h2><p>Zookeeper的数据结构像<strong>文件系统</strong>：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/                           (根节点)
├── dubbo                   (Dubbo服务注册路径)
│   ├── user-service
│   │   ├── providers       (服务提供者列表)
│   │   │   └── 192.168.1.100:20880
│   │   └── consumers       (服务消费者列表)
│   │       └── 192.168.1.101:8080
│   ├── trading-service
│   └── analysis-service
├── config                  (配置中心)
│   ├── mysql-config
│   └── redis-config
└── locks                   (分布式锁)
    └── order-lock
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="实战-使用你的-docker-zookeeper" tabindex="-1"><a class="header-anchor" href="#实战-使用你的-docker-zookeeper" aria-hidden="true">#</a> 实战：使用你的 Docker Zookeeper</h2><h3 id="_1-启动-zookeeper" tabindex="-1"><a class="header-anchor" href="#_1-启动-zookeeper" aria-hidden="true">#</a> 1. 启动 Zookeeper</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> quant-trading-platform
<span class="token function">docker</span> compose up <span class="token parameter variable">-d</span> zookeeper
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-验证-zookeeper-是否启动" tabindex="-1"><a class="header-anchor" href="#_2-验证-zookeeper-是否启动" aria-hidden="true">#</a> 2. 验证 Zookeeper 是否启动</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 查看容器状态</span>
<span class="token function">docker</span> compose <span class="token function">ps</span> zookeeper

<span class="token comment"># 查看日志</span>
<span class="token function">docker</span> compose logs zookeeper
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-连接到-zookeeper-命令行" tabindex="-1"><a class="header-anchor" href="#_3-连接到-zookeeper-命令行" aria-hidden="true">#</a> 3. 连接到 Zookeeper 命令行</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 进入容器</span>
<span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> quant-zookeeper <span class="token function">bash</span>

<span class="token comment"># 启动 Zookeeper 客户端</span>
zkCli.sh <span class="token parameter variable">-server</span> localhost:2181
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>成功后你会看到：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Welcome to ZooKeeper!
[zk: localhost:2181(CONNECTED) 0]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-基础命令实战" tabindex="-1"><a class="header-anchor" href="#_4-基础命令实战" aria-hidden="true">#</a> 4. 基础命令实战</h3><h4 id="查看根节点" tabindex="-1"><a class="header-anchor" href="#查看根节点" aria-hidden="true">#</a> 查看根节点</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token function">ls</span> /
<span class="token punctuation">[</span>zookeeper<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="创建节点-模拟服务注册" tabindex="-1"><a class="header-anchor" href="#创建节点-模拟服务注册" aria-hidden="true">#</a> 创建节点（模拟服务注册）</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 创建 dubbo 目录</span>
create /dubbo <span class="token string">&quot;&quot;</span>

<span class="token comment"># 创建 user-service</span>
create /dubbo/user-service <span class="token string">&quot;&quot;</span>

<span class="token comment"># 创建服务提供者节点</span>
create /dubbo/user-service/providers <span class="token string">&quot;&quot;</span>

<span class="token comment"># 注册一个服务实例（临时节点）</span>
create <span class="token parameter variable">-e</span> /dubbo/user-service/providers/192.168.1.100:20880 <span class="token string">&quot;user-service-instance-1&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>说明</strong>：</p><ul><li><code>-e</code> 表示临时节点（ephemeral），服务断开连接后自动删除</li><li>这就是Dubbo自动注册服务的原理</li></ul><h4 id="查看节点数据" tabindex="-1"><a class="header-anchor" href="#查看节点数据" aria-hidden="true">#</a> 查看节点数据</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 查看 providers 下的所有服务</span>
<span class="token function">ls</span> /dubbo/user-service/providers

<span class="token comment"># 查看节点详细信息</span>
get /dubbo/user-service/providers/192.168.1.100:20880
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="监听节点变化-模拟服务发现" tabindex="-1"><a class="header-anchor" href="#监听节点变化-模拟服务发现" aria-hidden="true">#</a> 监听节点变化（模拟服务发现）</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 监听 providers 节点变化</span>
<span class="token function">ls</span> <span class="token parameter variable">-w</span> /dubbo/user-service/providers
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>现在打开另一个终端，删除服务节点</strong>：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> quant-zookeeper zkCli.sh <span class="token parameter variable">-server</span> localhost:2181
delete /dubbo/user-service/providers/192.168.1.100:20880
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>回到第一个终端，你会看到变化通知！</p><h4 id="删除节点" tabindex="-1"><a class="header-anchor" href="#删除节点" aria-hidden="true">#</a> 删除节点</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 删除单个节点</span>
delete /dubbo/user-service/providers/192.168.1.100:20880

<span class="token comment"># 递归删除（带子节点）</span>
deleteall /dubbo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="退出客户端" tabindex="-1"><a class="header-anchor" href="#退出客户端" aria-hidden="true">#</a> 退出客户端</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>quit
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h2 id="zookeeper-在你的项目中的实际应用" tabindex="-1"><a class="header-anchor" href="#zookeeper-在你的项目中的实际应用" aria-hidden="true">#</a> Zookeeper 在你的项目中的实际应用</h2><h3 id="场景1-dubbo-服务注册" tabindex="-1"><a class="header-anchor" href="#场景1-dubbo-服务注册" aria-hidden="true">#</a> 场景1：Dubbo 服务注册</h3><p><strong>用户服务启动时</strong>（自动执行）：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// application.yml</span>
dubbo<span class="token operator">:</span>
  registry<span class="token operator">:</span>
    address<span class="token operator">:</span> zookeeper<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">2181</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Dubbo会自动在Zookeeper创建：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/dubbo/com.quant.UserService/providers/
  └── dubbo://192.168.1.100:20880/com.quant.UserService
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>API Gateway调用时</strong>：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@DubboReference</span>
<span class="token keyword">private</span> <span class="token class-name">UserService</span> userService<span class="token punctuation">;</span>  <span class="token comment">// Dubbo自动从Zookeeper查询服务地址</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="场景2-配置中心" tabindex="-1"><a class="header-anchor" href="#场景2-配置中心" aria-hidden="true">#</a> 场景2：配置中心</h3><p><strong>存储MySQL配置</strong>：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>create /config/mysql <span class="token string">&quot;jdbc:mysql://localhost:3306/quant_trading&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Java服务读取</strong>：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> mysqlUrl <span class="token operator">=</span> zkClient<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">&quot;/config/mysql&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="场景3-分布式锁" tabindex="-1"><a class="header-anchor" href="#场景3-分布式锁" aria-hidden="true">#</a> 场景3：分布式锁</h3><p><strong>防止多个策略服务同时执行同一个订单</strong>：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 获取锁</span>
create <span class="token parameter variable">-e</span> /locks/order-12345 <span class="token string">&quot;&quot;</span>

<span class="token comment"># 执行业务逻辑</span>
<span class="token comment"># ...</span>

<span class="token comment"># 释放锁</span>
delete /locks/order-12345
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="zookeeper-常用命令速查表" tabindex="-1"><a class="header-anchor" href="#zookeeper-常用命令速查表" aria-hidden="true">#</a> Zookeeper 常用命令速查表</h2><table><thead><tr><th>命令</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td><code>ls /path</code></td><td>列出子节点</td><td><code>ls /dubbo</code></td></tr><tr><td><code>create /path data</code></td><td>创建节点</td><td><code>create /test &quot;hello&quot;</code></td></tr><tr><td><code>create -e /path data</code></td><td>创建临时节点</td><td><code>create -e /temp &quot;test&quot;</code></td></tr><tr><td><code>create -s /path data</code></td><td>创建顺序节点</td><td><code>create -s /seq &quot;1&quot;</code></td></tr><tr><td><code>get /path</code></td><td>获取节点数据</td><td><code>get /dubbo/user-service</code></td></tr><tr><td><code>set /path data</code></td><td>修改节点数据</td><td><code>set /test &quot;world&quot;</code></td></tr><tr><td><code>delete /path</code></td><td>删除节点</td><td><code>delete /test</code></td></tr><tr><td><code>deleteall /path</code></td><td>递归删除</td><td><code>deleteall /dubbo</code></td></tr><tr><td><code>ls -w /path</code></td><td>监听子节点变化</td><td><code>ls -w /dubbo/providers</code></td></tr><tr><td><code>stat /path</code></td><td>查看节点状态</td><td><code>stat /dubbo</code></td></tr></tbody></table><hr><h2 id="实战练习-模拟微服务注册" tabindex="-1"><a class="header-anchor" href="#实战练习-模拟微服务注册" aria-hidden="true">#</a> 实战练习：模拟微服务注册</h2><h3 id="练习1-注册3个用户服务实例" tabindex="-1"><a class="header-anchor" href="#练习1-注册3个用户服务实例" aria-hidden="true">#</a> 练习1：注册3个用户服务实例</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 连接 Zookeeper</span>
<span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> quant-zookeeper zkCli.sh <span class="token parameter variable">-server</span> localhost:2181

<span class="token comment"># 创建服务目录</span>
create /dubbo <span class="token string">&quot;&quot;</span>
create /dubbo/user-service <span class="token string">&quot;&quot;</span>
create /dubbo/user-service/providers <span class="token string">&quot;&quot;</span>

<span class="token comment"># 注册3个实例</span>
create <span class="token parameter variable">-e</span> /dubbo/user-service/providers/192.168.1.100:20880 <span class="token string">&quot;instance-1&quot;</span>
create <span class="token parameter variable">-e</span> /dubbo/user-service/providers/192.168.1.101:20880 <span class="token string">&quot;instance-2&quot;</span>
create <span class="token parameter variable">-e</span> /dubbo/user-service/providers/192.168.1.102:20880 <span class="token string">&quot;instance-3&quot;</span>

<span class="token comment"># 查看所有实例</span>
<span class="token function">ls</span> /dubbo/user-service/providers
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="练习2-模拟服务下线" tabindex="-1"><a class="header-anchor" href="#练习2-模拟服务下线" aria-hidden="true">#</a> 练习2：模拟服务下线</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 删除一个实例（模拟服务崩溃）</span>
delete /dubbo/user-service/providers/192.168.1.100:20880

<span class="token comment"># 再次查看</span>
<span class="token function">ls</span> /dubbo/user-service/providers
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="练习3-监听服务变化" tabindex="-1"><a class="header-anchor" href="#练习3-监听服务变化" aria-hidden="true">#</a> 练习3：监听服务变化</h3><p><strong>终端1</strong>（监听）：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> quant-zookeeper zkCli.sh <span class="token parameter variable">-server</span> localhost:2181
<span class="token function">ls</span> <span class="token parameter variable">-w</span> /dubbo/user-service/providers
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>终端2</strong>（模拟服务上线）：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> quant-zookeeper zkCli.sh <span class="token parameter variable">-server</span> localhost:2181
create <span class="token parameter variable">-e</span> /dubbo/user-service/providers/192.168.1.200:20880 <span class="token string">&quot;new-instance&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>回到终端1，你会看到变化通知！</p><hr><h2 id="zookeeper-在-docker-中的配置说明" tabindex="-1"><a class="header-anchor" href="#zookeeper-在-docker-中的配置说明" aria-hidden="true">#</a> Zookeeper 在 Docker 中的配置说明</h2><h3 id="docker-compose-yml-配置解析" tabindex="-1"><a class="header-anchor" href="#docker-compose-yml-配置解析" aria-hidden="true">#</a> docker-compose.yml 配置解析</h3><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">zookeeper</span><span class="token punctuation">:</span>
  <span class="token key atrule">image</span><span class="token punctuation">:</span> zookeeper<span class="token punctuation">:</span><span class="token number">3.9</span>           <span class="token comment"># 使用官方镜像</span>
  <span class="token key atrule">container_name</span><span class="token punctuation">:</span> quant<span class="token punctuation">-</span>zookeeper
  <span class="token key atrule">ports</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token string">&quot;2181:2181&quot;</span>                <span class="token comment"># 客户端连接端口</span>
  <span class="token key atrule">environment</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> ALLOW_ANONYMOUS_LOGIN=yes  <span class="token comment"># 允许匿名访问（开发环境）</span>
  <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> zookeeper<span class="token punctuation">-</span>data<span class="token punctuation">:</span>/data       <span class="token comment"># 持久化数据</span>
    <span class="token punctuation">-</span> zookeeper<span class="token punctuation">-</span>logs<span class="token punctuation">:</span>/datalog    <span class="token comment"># 日志目录</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="关键端口" tabindex="-1"><a class="header-anchor" href="#关键端口" aria-hidden="true">#</a> 关键端口</h3><table><thead><tr><th>端口</th><th>用途</th></tr></thead><tbody><tr><td>2181</td><td>客户端连接端口（Java服务、zkCli都用这个）</td></tr><tr><td>2888</td><td>Zookeeper集群内部通信（单机不需要）</td></tr><tr><td>3888</td><td>Leader选举端口（单机不需要）</td></tr></tbody></table><hr><h2 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题" aria-hidden="true">#</a> 常见问题</h2><h3 id="q1-如何查看zookeeper中所有dubbo服务" tabindex="-1"><a class="header-anchor" href="#q1-如何查看zookeeper中所有dubbo服务" aria-hidden="true">#</a> Q1: 如何查看Zookeeper中所有Dubbo服务？</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> quant-zookeeper zkCli.sh <span class="token parameter variable">-server</span> localhost:2181
<span class="token function">ls</span> /dubbo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="q2-如何清空所有服务注册信息" tabindex="-1"><a class="header-anchor" href="#q2-如何清空所有服务注册信息" aria-hidden="true">#</a> Q2: 如何清空所有服务注册信息？</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> quant-zookeeper zkCli.sh <span class="token parameter variable">-server</span> localhost:2181
deleteall /dubbo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="q3-如何检查zookeeper健康状态" tabindex="-1"><a class="header-anchor" href="#q3-如何检查zookeeper健康状态" aria-hidden="true">#</a> Q3: 如何检查Zookeeper健康状态？</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 方法1：使用四字命令</span>
<span class="token builtin class-name">echo</span> <span class="token function">stat</span> <span class="token operator">|</span> <span class="token function">nc</span> localhost <span class="token number">2181</span>

<span class="token comment"># 方法2：查看容器日志</span>
<span class="token function">docker</span> compose logs zookeeper <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-i</span> <span class="token string">&quot;binding to port&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="q4-临时节点和持久节点的区别" tabindex="-1"><a class="header-anchor" href="#q4-临时节点和持久节点的区别" aria-hidden="true">#</a> Q4: 临时节点和持久节点的区别？</h3><table><thead><tr><th>类型</th><th>创建方式</th><th>生命周期</th><th>使用场景</th></tr></thead><tbody><tr><td>持久节点</td><td><code>create /path data</code></td><td>手动删除</td><td>配置数据、目录结构</td></tr><tr><td>临时节点</td><td><code>create -e /path data</code></td><td>会话结束自动删除</td><td>服务注册（服务挂了自动下线）</td></tr></tbody></table><hr><h2 id="下一步学习" tabindex="-1"><a class="header-anchor" href="#下一步学习" aria-hidden="true">#</a> 下一步学习</h2><ol><li><strong>Java客户端</strong>：使用Apache Curator操作Zookeeper</li><li><strong>Dubbo集成</strong>：Spring Boot + Dubbo + Zookeeper完整示例</li><li><strong>配置中心</strong>：实现动态配置更新</li><li><strong>分布式锁</strong>：实现分布式事务控制</li></ol><hr><h2 id="参考资源" tabindex="-1"><a class="header-anchor" href="#参考资源" aria-hidden="true">#</a> 参考资源</h2>`,95),p={href:"https://zookeeper.apache.org/doc/current/",target:"_blank",rel:"noopener noreferrer"},u={href:"https://dubbo.apache.org/zh/docs/",target:"_blank",rel:"noopener noreferrer"},v=e("li",null,[a("项目文档："),e("code",null,"量化交易平台架构设计.md")],-1),b=e("hr",null,null,-1),h=e("p",null,[e("strong",null,"提示"),a("：每次学习完可以更新 "),e("code",null,"DEVLOG.md"),a(" 记录你的进度！")],-1);function m(k,g){const s=d("ExternalLinkIcon");return r(),t("div",null,[c,e("ul",null,[e("li",null,[e("a",p,[a("Zookeeper 官方文档"),n(s)])]),e("li",null,[e("a",u,[a("Dubbo + Zookeeper 官方指南"),n(s)])]),v]),b,h])}const f=i(l,[["render",m],["__file","Zookeeper教程.html.vue"]]);export{f as default};
