const e=JSON.parse(`{"key":"v-5aa1fcf0","path":"/frontend/javascript.html","title":"JavaScript","lang":"en-US","frontmatter":{"cover":"/assets/images/secondhand-project.jpg","icon":"pen-to-square","date":"2024-01-21T00:00:00.000Z","category":["projects"],"tag":["JavaScript"],"description":"JavaScript () in JavaScript The () is used to invoke or call a function. When we have a function reference followed by parentheses, it means we are executing or calling that function. Function Invocation: function greet(name) { console.log(\\"Hello, \\" + name + \\"!\\"); } greet(\\"John\\"); // This calls the greet function with the argument 'John'.","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/frontend/javascript.html"}],["meta",{"property":"og:site_name","content":"YC Tech Blog"}],["meta",{"property":"og:title","content":"JavaScript"}],["meta",{"property":"og:description","content":"JavaScript () in JavaScript The () is used to invoke or call a function. When we have a function reference followed by parentheses, it means we are executing or calling that function. Function Invocation: function greet(name) { console.log(\\"Hello, \\" + name + \\"!\\"); } greet(\\"John\\"); // This calls the greet function with the argument 'John'."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/assets/images/secondhand-project.jpg"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-01-22T05:23:00.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"JavaScript"}],["meta",{"property":"article:author","content":"Youwei Chen"}],["meta",{"property":"article:tag","content":"JavaScript"}],["meta",{"property":"article:published_time","content":"2024-01-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-22T05:23:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JavaScript\\",\\"image\\":[\\"https://mister-hope.github.io/assets/images/secondhand-project.jpg\\"],\\"datePublished\\":\\"2024-01-21T00:00:00.000Z\\",\\"dateModified\\":\\"2024-01-22T05:23:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Youwei Chen\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"() in JavaScript","slug":"in-javascript","link":"#in-javascript","children":[{"level":3,"title":"Function Invocation:","slug":"function-invocation","link":"#function-invocation","children":[]},{"level":3,"title":"Immediately Invoked Function Expression (IIFE):","slug":"immediately-invoked-function-expression-iife","link":"#immediately-invoked-function-expression-iife","children":[]},{"level":3,"title":"function without parentheses","slug":"function-without-parentheses","link":"#function-without-parentheses","children":[]}]},{"level":2,"title":"Closure","slug":"closure","link":"#closure","children":[{"level":3,"title":"Why we use Closures","slug":"why-we-use-closures","link":"#why-we-use-closures","children":[]}]},{"level":2,"title":"Understanding Object Literals:","slug":"understanding-object-literals","link":"#understanding-object-literals","children":[{"level":3,"title":"Method Definition in Object Literal","slug":"method-definition-in-object-literal","link":"#method-definition-in-object-literal","children":[]}]},{"level":2,"title":"Array in JavaScript","slug":"array-in-javascript","link":"#array-in-javascript","children":[{"level":3,"title":"Creating Arrays","slug":"creating-arrays","link":"#creating-arrays","children":[]},{"level":3,"title":"Common Array Methods","slug":"common-array-methods","link":"#common-array-methods","children":[]}]},{"level":2,"title":"Functional Composition","slug":"functional-composition","link":"#functional-composition","children":[]},{"level":2,"title":"reduceRight","slug":"reduceright","link":"#reduceright","children":[]},{"level":2,"title":"apply()","slug":"apply","link":"#apply","children":[]},{"level":2,"title":"JSON.stringify()","slug":"json-stringify","link":"#json-stringify","children":[{"level":3,"title":"Syntax","slug":"syntax","link":"#syntax","children":[]},{"level":3,"title":"Example","slug":"example","link":"#example","children":[]},{"level":3,"title":"Why we need JSON.stringify()?","slug":"why-we-need-json-stringify","link":"#why-we-need-json-stringify","children":[]}]},{"level":2,"title":"Promises in JavaScript","slug":"promises-in-javascript","link":"#promises-in-javascript","children":[{"level":3,"title":"Introduction to Promises","slug":"introduction-to-promises","link":"#introduction-to-promises","children":[]},{"level":3,"title":"Creating a Promise","slug":"creating-a-promise","link":"#creating-a-promise","children":[]}]}],"git":{"createdTime":1705900980000,"updatedTime":1705900980000,"contributors":[{"name":"Youwei Chen","email":"youweichen0208@gmail.com","commits":1}]},"readingTime":{"minutes":4.33,"words":1300},"filePathRelative":"frontend/javascript.md","localizedDate":"January 21, 2024","excerpt":"<h1> JavaScript</h1>\\n<h2> <code>()</code> in JavaScript</h2>\\n<p>The <code>()</code> is used to invoke or call a function. When we have a function reference followed by parentheses, it means we are executing or calling that function.</p>\\n<h3> Function Invocation:</h3>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">greet</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">name</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Hello, \\"</span> <span class=\\"token operator\\">+</span> name <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\"!\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token function\\">greet</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"John\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// This calls the greet function with the argument 'John'.</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{e as data};
