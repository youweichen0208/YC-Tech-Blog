const t=JSON.parse('{"key":"v-09c07d70","path":"/frontend/typescript.html","title":"TypeScript","lang":"en-US","frontmatter":{"cover":"/assets/images/secondhand-project.jpg","icon":"pen-to-square","date":"2024-01-22T00:00:00.000Z","category":["frontend"],"tag":["TypeScript"],"description":"TypeScript Understanding Type Annotations in TypeScript What is Type Annotation in TypeScript TypeScript uses type annotations to explicitly specify types for identifiers such as variables, functions, objects, etc. TypeScript uses the syntax :type after an identifier as the type annotation, which type can be any valid type. Once an identifier is annotated with a type, it can be used as that type only. If the identifier is used as a different type, the TypeScript compiler will issue an error.","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/frontend/typescript.html"}],["meta",{"property":"og:site_name","content":"YC Tech Blog"}],["meta",{"property":"og:title","content":"TypeScript"}],["meta",{"property":"og:description","content":"TypeScript Understanding Type Annotations in TypeScript What is Type Annotation in TypeScript TypeScript uses type annotations to explicitly specify types for identifiers such as variables, functions, objects, etc. TypeScript uses the syntax :type after an identifier as the type annotation, which type can be any valid type. Once an identifier is annotated with a type, it can be used as that type only. If the identifier is used as a different type, the TypeScript compiler will issue an error."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/assets/images/secondhand-project.jpg"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-01-22T21:22:53.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"TypeScript"}],["meta",{"property":"article:author","content":"Youwei Chen"}],["meta",{"property":"article:tag","content":"TypeScript"}],["meta",{"property":"article:published_time","content":"2024-01-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-22T21:22:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"TypeScript\\",\\"image\\":[\\"https://mister-hope.github.io/assets/images/secondhand-project.jpg\\"],\\"datePublished\\":\\"2024-01-22T00:00:00.000Z\\",\\"dateModified\\":\\"2024-01-22T21:22:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Youwei Chen\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"Understanding Type Annotations in TypeScript","slug":"understanding-type-annotations-in-typescript","link":"#understanding-type-annotations-in-typescript","children":[{"level":3,"title":"What is Type Annotation in TypeScript","slug":"what-is-type-annotation-in-typescript","link":"#what-is-type-annotation-in-typescript","children":[]},{"level":3,"title":"Type Annotation examples:","slug":"type-annotation-examples","link":"#type-annotation-examples","children":[]}]},{"level":2,"title":"Introduction to TypeScript object type:","slug":"introduction-to-typescript-object-type","link":"#introduction-to-typescript-object-type","children":[]},{"level":2,"title":"TypeScript functions:","slug":"typescript-functions","link":"#typescript-functions","children":[{"level":3,"title":"Introduction to TypeScript functions:","slug":"introduction-to-typescript-functions","link":"#introduction-to-typescript-functions","children":[]},{"level":3,"title":"Function Overloadings:","slug":"function-overloadings","link":"#function-overloadings","children":[]}]},{"level":2,"title":"Introduction to the TypeScript Class","slug":"introduction-to-the-typescript-class","link":"#introduction-to-the-typescript-class","children":[]}],"git":{"createdTime":1705958573000,"updatedTime":1705958573000,"contributors":[{"name":"Youwei Chen","email":"youweichen0208@gmail.com","commits":1}]},"readingTime":{"minutes":1.47,"words":442},"filePathRelative":"frontend/typescript.md","localizedDate":"January 22, 2024","excerpt":"<h1> TypeScript</h1>\\n<h2> Understanding Type Annotations in TypeScript</h2>\\n<h3> What is Type Annotation in TypeScript</h3>\\n<p>TypeScript uses type annotations to explicitly specify types for identifiers such as variables, functions, objects, etc. TypeScript uses the syntax <code>:type</code> after an identifier as the type annotation, which <code>type</code> can be any valid type. <strong>Once an identifier is annotated with a type, it can be used as that type only. If the identifier is used as a different type, the TypeScript compiler will issue an error.</strong></p>","autoDesc":true}');export{t as data};
