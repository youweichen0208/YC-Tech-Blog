const e=JSON.parse(`{"key":"v-31a0ed89","path":"/backend/ddd.html","title":"","lang":"en-US","frontmatter":{"icon":"pen-to-square","date":"2024-11-08T00:00:00.000Z","category":["backend"],"tag":["C#","DDD"],"description":"CQRS(command query responsibility segregation) The fundamental idea is that we should divide an object's methods into two sharply separated categories: Queries: return a result and do not change the observable state of the system(are free of side effects). Commands: change the state of a system but do not return a value.","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/backend/ddd.html"}],["meta",{"property":"og:site_name","content":"YC Tech Blog"}],["meta",{"property":"og:description","content":"CQRS(command query responsibility segregation) The fundamental idea is that we should divide an object's methods into two sharply separated categories: Queries: return a result and do not change the observable state of the system(are free of side effects). Commands: change the state of a system but do not return a value."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-08T09:45:20.000Z"}],["meta",{"property":"article:author","content":"Youwei Chen"}],["meta",{"property":"article:tag","content":"C#"}],["meta",{"property":"article:tag","content":"DDD"}],["meta",{"property":"article:published_time","content":"2024-11-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-08T09:45:20.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-11-08T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-08T09:45:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Youwei Chen\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"CQRS(command query responsibility segregation)","slug":"cqrs-command-query-responsibility-segregation","link":"#cqrs-command-query-responsibility-segregation","children":[{"level":3,"title":"why separating methods that change state (modifiers/commands) from those that don't (queries) is so valuable in practice:","slug":"why-separating-methods-that-change-state-modifiers-commands-from-those-that-don-t-queries-is-so-valuable-in-practice","link":"#why-separating-methods-that-change-state-modifiers-commands-from-those-that-don-t-queries-is-so-valuable-in-practice","children":[]}]},{"level":2,"title":"Applying simplified CQRS and DDD patterns in a microservice","slug":"applying-simplified-cqrs-and-ddd-patterns-in-a-microservice","link":"#applying-simplified-cqrs-and-ddd-patterns-in-a-microservice","children":[]},{"level":2,"title":"Design a DDD-oriented microservice","slug":"design-a-ddd-oriented-microservice","link":"#design-a-ddd-oriented-microservice","children":[]},{"level":2,"title":"Design a microservice domain model","slug":"design-a-microservice-domain-model","link":"#design-a-microservice-domain-model","children":[]}],"git":{"createdTime":1731059120000,"updatedTime":1731059120000,"contributors":[{"name":"jeremy.chen@enuit.com","email":"jeremy.chen@enuit.com","commits":1}]},"readingTime":{"minutes":2.4,"words":720},"filePathRelative":"backend/ddd.md","localizedDate":"November 8, 2024","excerpt":"<h2> CQRS(command query responsibility segregation)</h2>\\n<p>The fundamental idea is that we should divide an object's methods into two sharply separated categories:</p>\\n<ol>\\n<li><code>Queries</code>: return a result and do not change the observable state of the system(are free of side effects).</li>\\n<li><code>Commands</code>: change the state of a system but do not return a value.</li>\\n</ol>","autoDesc":true}`);export{e as data};
