import{_ as n,o as s,c as a,e as t}from"./app-Z_B6pOHV.js";const p={},e=t(`<h1 id="python调用国内股票市场api完整教程" tabindex="-1"><a class="header-anchor" href="#python调用国内股票市场api完整教程" aria-hidden="true">#</a> Python调用国内股票市场API完整教程</h1><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录" aria-hidden="true">#</a> 目录</h2><ul><li><a href="#api%E9%80%89%E6%8B%A9">API选择</a></li><li><a href="#%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B">快速开始</a></li><li><a href="#tushare%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97">Tushare使用指南</a></li><li><a href="#akshare%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97">AKShare使用指南</a></li><li><a href="#%E5%AE%9E%E6%88%98%E7%A4%BA%E4%BE%8B">实战示例</a></li><li><a href="#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98">常见问题</a></li><li><a href="#%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5">最佳实践</a></li></ul><hr><h2 id="api选择" tabindex="-1"><a class="header-anchor" href="#api选择" aria-hidden="true">#</a> API选择</h2><p>你的项目已经集成了两个主流的中国股票数据API：</p><h3 id="_1-tushare-推荐-⭐" tabindex="-1"><a class="header-anchor" href="#_1-tushare-推荐-⭐" aria-hidden="true">#</a> 1. Tushare（推荐）⭐</h3><p><strong>优点：</strong></p><ul><li>✅ 数据质量高，专业金融数据</li><li>✅ 接口稳定，更新及时</li><li>✅ 支持历史数据回测</li><li>✅ 数据完整（财务数据、基本面、技术指标等）</li></ul><p><strong>缺点：</strong></p><ul><li>❌ 需要注册获取Token</li><li>❌ 免费版有积分限制</li></ul><p><strong>官网：</strong> https://tushare.pro</p><h3 id="_2-akshare-备选" tabindex="-1"><a class="header-anchor" href="#_2-akshare-备选" aria-hidden="true">#</a> 2. AKShare（备选）</h3><p><strong>优点：</strong></p><ul><li>✅ 完全免费，无需注册</li><li>✅ 数据源丰富（东方财富、新浪财经等）</li><li>✅ 上手简单</li></ul><p><strong>缺点：</strong></p><ul><li>❌ 数据质量不如Tushare</li><li>❌ 稳定性稍差（依赖第三方网站）</li></ul><p><strong>官网：</strong> https://akshare.akfamily.xyz</p><h3 id="对比表" tabindex="-1"><a class="header-anchor" href="#对比表" aria-hidden="true">#</a> 对比表</h3><table><thead><tr><th>特性</th><th>Tushare</th><th>AKShare</th></tr></thead><tbody><tr><td><strong>价格</strong></td><td>免费版限额</td><td>完全免费</td></tr><tr><td><strong>注册</strong></td><td>需要Token</td><td>无需注册</td></tr><tr><td><strong>数据质量</strong></td><td>⭐⭐⭐⭐⭐</td><td>⭐⭐⭐⭐</td></tr><tr><td><strong>稳定性</strong></td><td>⭐⭐⭐⭐⭐</td><td>⭐⭐⭐</td></tr><tr><td><strong>数据完整性</strong></td><td>极高</td><td>较高</td></tr><tr><td><strong>更新速度</strong></td><td>实时</td><td>准实时</td></tr><tr><td><strong>适用场景</strong></td><td>专业量化、回测</td><td>个人项目、快速原型</td></tr></tbody></table><hr><h2 id="快速开始" tabindex="-1"><a class="header-anchor" href="#快速开始" aria-hidden="true">#</a> 快速开始</h2><h3 id="_1-安装依赖" tabindex="-1"><a class="header-anchor" href="#_1-安装依赖" aria-hidden="true">#</a> 1. 安装依赖</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /Users/youweichen/quant-trading-platform/market-data-service

<span class="token comment"># 安装所有依赖</span>
pip3 <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt

<span class="token comment"># 或单独安装</span>
pip3 <span class="token function">install</span> tushare akshare pandas
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-配置tushare-token-推荐" tabindex="-1"><a class="header-anchor" href="#_2-配置tushare-token-推荐" aria-hidden="true">#</a> 2. 配置Tushare Token（推荐）</h3><h4 id="步骤1-注册tushare账号" tabindex="-1"><a class="header-anchor" href="#步骤1-注册tushare账号" aria-hidden="true">#</a> 步骤1: 注册Tushare账号</h4><ol><li>访问 https://tushare.pro/register</li><li>注册账号（手机号或邮箱）</li><li>登录后进入个人中心：https://tushare.pro/user/token</li><li>复制你的Token（类似：<code>1234567890abcdef1234567890abcdef</code>）</li></ol><h4 id="步骤2-配置环境变量" tabindex="-1"><a class="header-anchor" href="#步骤2-配置环境变量" aria-hidden="true">#</a> 步骤2: 配置环境变量</h4><p>创建 <code>.env</code> 文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /Users/youweichen/quant-trading-platform/market-data-service

<span class="token comment"># 创建.env文件</span>
<span class="token function">cat</span> <span class="token operator">&gt;</span> .env <span class="token operator">&lt;&lt;</span> <span class="token string">&#39;EOF&#39;
# Tushare配置
TUSHARE_TOKEN=your_token_here

# AKShare配置
AKSHARE_ENABLED=true

# Kafka配置
KAFKA_BOOTSTRAP_SERVERS=localhost:9092

# 股票代码列表（逗号分隔）
STOCK_CODES=000001.SZ,000002.SZ,600000.SH,600519.SH

# 数据采集间隔（秒）
COLLECT_REALTIME_INTERVAL=60
EOF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>替换你的Token：</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 用你的真实Token替换</span>
<span class="token function">vim</span> .env
<span class="token comment"># 将 your_token_here 改为你从Tushare获取的Token</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="步骤3-验证配置" tabindex="-1"><a class="header-anchor" href="#步骤3-验证配置" aria-hidden="true">#</a> 步骤3: 验证配置</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 测试脚本</span>
<span class="token keyword">import</span> tushare <span class="token keyword">as</span> ts

token <span class="token operator">=</span> <span class="token string">&#39;your_token_here&#39;</span>  <span class="token comment"># 替换为你的Token</span>
ts<span class="token punctuation">.</span>set_token<span class="token punctuation">(</span>token<span class="token punctuation">)</span>
pro <span class="token operator">=</span> ts<span class="token punctuation">.</span>pro_api<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 测试获取数据</span>
df <span class="token operator">=</span> pro<span class="token punctuation">.</span>daily<span class="token punctuation">(</span>ts_code<span class="token operator">=</span><span class="token string">&#39;000001.SZ&#39;</span><span class="token punctuation">,</span> start_date<span class="token operator">=</span><span class="token string">&#39;20240101&#39;</span><span class="token punctuation">,</span> end_date<span class="token operator">=</span><span class="token string">&#39;20240115&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-不使用token-仅akshare" tabindex="-1"><a class="header-anchor" href="#_3-不使用token-仅akshare" aria-hidden="true">#</a> 3. 不使用Token（仅AKShare）</h3><p>如果你不想注册Tushare，可以只使用AKShare：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># .env文件</span>
<span class="token assign-left variable">TUSHARE_TOKEN</span><span class="token operator">=</span>  <span class="token comment"># 留空</span>
<span class="token assign-left variable">AKSHARE_ENABLED</span><span class="token operator">=</span>true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="tushare使用指南" tabindex="-1"><a class="header-anchor" href="#tushare使用指南" aria-hidden="true">#</a> Tushare使用指南</h2><h3 id="_1-初始化" tabindex="-1"><a class="header-anchor" href="#_1-初始化" aria-hidden="true">#</a> 1. 初始化</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> src<span class="token punctuation">.</span>data_providers<span class="token punctuation">.</span>tushare_provider <span class="token keyword">import</span> TushareProvider

<span class="token comment"># 方式1: 从环境变量读取Token</span>
<span class="token keyword">from</span> src<span class="token punctuation">.</span>config <span class="token keyword">import</span> settings
provider <span class="token operator">=</span> TushareProvider<span class="token punctuation">(</span>token<span class="token operator">=</span>settings<span class="token punctuation">.</span>tushare_token<span class="token punctuation">)</span>

<span class="token comment"># 方式2: 直接传入Token</span>
provider <span class="token operator">=</span> TushareProvider<span class="token punctuation">(</span>token<span class="token operator">=</span><span class="token string">&#39;your_token_here&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 检查是否可用</span>
<span class="token keyword">if</span> provider<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Tushare已准备就绪！&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Tushare未配置或Token无效&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-获取股票日线数据" tabindex="-1"><a class="header-anchor" href="#_2-获取股票日线数据" aria-hidden="true">#</a> 2. 获取股票日线数据</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 获取平安银行（000001.SZ）的日K线数据</span>
stocks <span class="token operator">=</span> provider<span class="token punctuation">.</span>get_stock_daily<span class="token punctuation">(</span>
    ts_code<span class="token operator">=</span><span class="token string">&#39;000001.SZ&#39;</span><span class="token punctuation">,</span>
    start_date<span class="token operator">=</span><span class="token string">&#39;20240101&#39;</span><span class="token punctuation">,</span>  <span class="token comment"># 2024-01-01</span>
    end_date<span class="token operator">=</span><span class="token string">&#39;20240115&#39;</span>     <span class="token comment"># 2024-01-15</span>
<span class="token punctuation">)</span>

<span class="token comment"># 打印数据</span>
<span class="token keyword">for</span> stock <span class="token keyword">in</span> stocks<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;日期: </span><span class="token interpolation"><span class="token punctuation">{</span>stock<span class="token punctuation">.</span>trade_date<span class="token punctuation">}</span></span><span class="token string">, &quot;</span></span>
          <span class="token string-interpolation"><span class="token string">f&quot;开盘: </span><span class="token interpolation"><span class="token punctuation">{</span>stock<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">}</span></span><span class="token string">, &quot;</span></span>
          <span class="token string-interpolation"><span class="token string">f&quot;收盘: </span><span class="token interpolation"><span class="token punctuation">{</span>stock<span class="token punctuation">.</span>close<span class="token punctuation">}</span></span><span class="token string">, &quot;</span></span>
          <span class="token string-interpolation"><span class="token string">f&quot;涨跌幅: </span><span class="token interpolation"><span class="token punctuation">{</span>stock<span class="token punctuation">.</span>pct_chg<span class="token punctuation">}</span></span><span class="token string">%&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>输出示例：</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>日期: 20240115, 开盘: 12.50, 收盘: 12.65, 涨跌幅: 1.20%
日期: 20240112, 开盘: 12.40, 收盘: 12.50, 涨跌幅: 0.81%
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-获取实时行情" tabindex="-1"><a class="header-anchor" href="#_3-获取实时行情" aria-hidden="true">#</a> 3. 获取实时行情</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 获取多只股票的实时行情</span>
realtime_data <span class="token operator">=</span> provider<span class="token punctuation">.</span>get_stock_realtime<span class="token punctuation">(</span>
    ts_codes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;000001.SZ&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;600519.SH&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;000002.SZ&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">)</span>

<span class="token keyword">for</span> data <span class="token keyword">in</span> realtime_data<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>data<span class="token punctuation">.</span>code<span class="token punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">{</span>data<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span><span class="token string">: &quot;</span></span>
          <span class="token string-interpolation"><span class="token string">f&quot;¥</span><span class="token interpolation"><span class="token punctuation">{</span>data<span class="token punctuation">.</span>price<span class="token punctuation">}</span></span><span class="token string"> (</span><span class="token interpolation"><span class="token punctuation">{</span>data<span class="token punctuation">.</span>pct_change<span class="token punctuation">:</span><span class="token format-spec">+.2f</span><span class="token punctuation">}</span></span><span class="token string">%)&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>输出示例：</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>000001.SZ 平安银行: ¥12.65 (+1.20%)
600519.SH 贵州茅台: ¥1850.00 (-0.50%)
000002.SZ 万科A: ¥8.30 (+2.10%)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-获取指数数据" tabindex="-1"><a class="header-anchor" href="#_4-获取指数数据" aria-hidden="true">#</a> 4. 获取指数数据</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 获取上证指数数据</span>
index_data <span class="token operator">=</span> provider<span class="token punctuation">.</span>get_index_daily<span class="token punctuation">(</span>
    ts_code<span class="token operator">=</span><span class="token string">&#39;000001.SH&#39;</span><span class="token punctuation">,</span>  <span class="token comment"># 上证指数</span>
    start_date<span class="token operator">=</span><span class="token string">&#39;20240101&#39;</span><span class="token punctuation">,</span>
    end_date<span class="token operator">=</span><span class="token string">&#39;20240115&#39;</span>
<span class="token punctuation">)</span>

<span class="token keyword">for</span> index <span class="token keyword">in</span> index_data<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;日期: </span><span class="token interpolation"><span class="token punctuation">{</span>index<span class="token punctuation">.</span>trade_date<span class="token punctuation">}</span></span><span class="token string">, &quot;</span></span>
          <span class="token string-interpolation"><span class="token string">f&quot;收盘: </span><span class="token interpolation"><span class="token punctuation">{</span>index<span class="token punctuation">.</span>close<span class="token punctuation">}</span></span><span class="token string">, &quot;</span></span>
          <span class="token string-interpolation"><span class="token string">f&quot;涨跌幅: </span><span class="token interpolation"><span class="token punctuation">{</span>index<span class="token punctuation">.</span>pct_chg<span class="token punctuation">}</span></span><span class="token string">%&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-常用股票代码" tabindex="-1"><a class="header-anchor" href="#_5-常用股票代码" aria-hidden="true">#</a> 5. 常用股票代码</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 股票代码格式：6位数字 + .交易所</span>
STOCK_CODES <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment"># 沪市（上海证券交易所）- 以6开头</span>
    <span class="token string">&#39;600000.SH&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;浦发银行&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;600519.SH&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;贵州茅台&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;600036.SH&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;招商银行&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;601318.SH&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;中国平安&#39;</span><span class="token punctuation">,</span>

    <span class="token comment"># 深市（深圳证券交易所）- 以0开头</span>
    <span class="token string">&#39;000001.SZ&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;平安银行&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;000002.SZ&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;万科A&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;000858.SZ&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;五粮液&#39;</span><span class="token punctuation">,</span>

    <span class="token comment"># 创业板 - 以3开头</span>
    <span class="token string">&#39;300750.SZ&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;宁德时代&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;300059.SZ&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;东方财富&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment"># 指数代码</span>
INDEX_CODES <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;000001.SH&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;上证指数&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;399001.SZ&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;深证成指&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;399006.SZ&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;创业板指&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;000300.SH&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;沪深300&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="akshare使用指南" tabindex="-1"><a class="header-anchor" href="#akshare使用指南" aria-hidden="true">#</a> AKShare使用指南</h2><h3 id="_1-初始化-1" tabindex="-1"><a class="header-anchor" href="#_1-初始化-1" aria-hidden="true">#</a> 1. 初始化</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> src<span class="token punctuation">.</span>data_providers<span class="token punctuation">.</span>akshare_provider <span class="token keyword">import</span> AKShareProvider

<span class="token comment"># AKShare无需Token，直接初始化</span>
provider <span class="token operator">=</span> AKShareProvider<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 检查是否可用</span>
<span class="token keyword">if</span> provider<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;AKShare已准备就绪！&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-获取股票日线数据-1" tabindex="-1"><a class="header-anchor" href="#_2-获取股票日线数据-1" aria-hidden="true">#</a> 2. 获取股票日线数据</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 获取平安银行的日K线数据</span>
stocks <span class="token operator">=</span> provider<span class="token punctuation">.</span>get_stock_daily<span class="token punctuation">(</span>
    ts_code<span class="token operator">=</span><span class="token string">&#39;000001.SZ&#39;</span><span class="token punctuation">,</span>
    start_date<span class="token operator">=</span><span class="token string">&#39;2024-01-01&#39;</span><span class="token punctuation">,</span>  <span class="token comment"># AKShare支持横杠格式</span>
    end_date<span class="token operator">=</span><span class="token string">&#39;2024-01-15&#39;</span>
<span class="token punctuation">)</span>

<span class="token keyword">for</span> stock <span class="token keyword">in</span> stocks<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;日期: </span><span class="token interpolation"><span class="token punctuation">{</span>stock<span class="token punctuation">.</span>trade_date<span class="token punctuation">}</span></span><span class="token string">, &quot;</span></span>
          <span class="token string-interpolation"><span class="token string">f&quot;收盘: </span><span class="token interpolation"><span class="token punctuation">{</span>stock<span class="token punctuation">.</span>close<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-获取实时行情-1" tabindex="-1"><a class="header-anchor" href="#_3-获取实时行情-1" aria-hidden="true">#</a> 3. 获取实时行情</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 获取实时行情（AKShare会获取所有A股，然后筛选）</span>
realtime_data <span class="token operator">=</span> provider<span class="token punctuation">.</span>get_stock_realtime<span class="token punctuation">(</span>
    ts_codes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;000001.SZ&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;600519.SH&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">)</span>

<span class="token keyword">for</span> data <span class="token keyword">in</span> realtime_data<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>data<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span><span class="token string">: ¥</span><span class="token interpolation"><span class="token punctuation">{</span>data<span class="token punctuation">.</span>price<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-获取指数数据-1" tabindex="-1"><a class="header-anchor" href="#_4-获取指数数据-1" aria-hidden="true">#</a> 4. 获取指数数据</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 获取上证指数</span>
index_data <span class="token operator">=</span> provider<span class="token punctuation">.</span>get_index_daily<span class="token punctuation">(</span>
    ts_code<span class="token operator">=</span><span class="token string">&#39;000001.SH&#39;</span><span class="token punctuation">,</span>
    start_date<span class="token operator">=</span><span class="token string">&#39;2024-01-01&#39;</span><span class="token punctuation">,</span>
    end_date<span class="token operator">=</span><span class="token string">&#39;2024-01-15&#39;</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="实战示例" tabindex="-1"><a class="header-anchor" href="#实战示例" aria-hidden="true">#</a> 实战示例</h2><h3 id="示例1-获取茅台股价并分析" tabindex="-1"><a class="header-anchor" href="#示例1-获取茅台股价并分析" aria-hidden="true">#</a> 示例1: 获取茅台股价并分析</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> src<span class="token punctuation">.</span>data_providers<span class="token punctuation">.</span>tushare_provider <span class="token keyword">import</span> TushareProvider
<span class="token keyword">from</span> src<span class="token punctuation">.</span>config <span class="token keyword">import</span> settings
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd

<span class="token comment"># 初始化</span>
provider <span class="token operator">=</span> TushareProvider<span class="token punctuation">(</span>token<span class="token operator">=</span>settings<span class="token punctuation">.</span>tushare_token<span class="token punctuation">)</span>

<span class="token comment"># 获取贵州茅台近一年数据</span>
stocks <span class="token operator">=</span> provider<span class="token punctuation">.</span>get_stock_daily<span class="token punctuation">(</span>
    ts_code<span class="token operator">=</span><span class="token string">&#39;600519.SH&#39;</span><span class="token punctuation">,</span>
    start_date<span class="token operator">=</span><span class="token string">&#39;20230101&#39;</span><span class="token punctuation">,</span>
    end_date<span class="token operator">=</span><span class="token string">&#39;20231231&#39;</span>
<span class="token punctuation">)</span>

<span class="token comment"># 转换为DataFrame便于分析</span>
data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> stock <span class="token keyword">in</span> stocks<span class="token punctuation">:</span>
    data<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token string">&#39;date&#39;</span><span class="token punctuation">:</span> stock<span class="token punctuation">.</span>trade_date<span class="token punctuation">,</span>
        <span class="token string">&#39;close&#39;</span><span class="token punctuation">:</span> stock<span class="token punctuation">.</span>close<span class="token punctuation">,</span>
        <span class="token string">&#39;pct_chg&#39;</span><span class="token punctuation">:</span> stock<span class="token punctuation">.</span>pct_chg
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">)</span>

<span class="token comment"># 统计分析</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;总交易日: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">len</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;最高价: ¥</span><span class="token interpolation"><span class="token punctuation">{</span>df<span class="token punctuation">[</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;最低价: ¥</span><span class="token interpolation"><span class="token punctuation">{</span>df<span class="token punctuation">[</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;平均价: ¥</span><span class="token interpolation"><span class="token punctuation">{</span>df<span class="token punctuation">[</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;年涨跌幅: </span><span class="token interpolation"><span class="token punctuation">{</span>df<span class="token punctuation">[</span><span class="token string">&#39;pct_chg&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">%&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="示例2-监控多只股票实时涨跌" tabindex="-1"><a class="header-anchor" href="#示例2-监控多只股票实时涨跌" aria-hidden="true">#</a> 示例2: 监控多只股票实时涨跌</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> time
<span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime

<span class="token keyword">def</span> <span class="token function">monitor_stocks</span><span class="token punctuation">(</span>codes<span class="token punctuation">,</span> interval<span class="token operator">=</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;监控股票实时涨跌&quot;&quot;&quot;</span>
    provider <span class="token operator">=</span> TushareProvider<span class="token punctuation">(</span>token<span class="token operator">=</span>settings<span class="token punctuation">.</span>tushare_token<span class="token punctuation">)</span>

    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;\\n=== </span><span class="token interpolation"><span class="token punctuation">{</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&#39;%Y-%m-%d %H:%M:%S&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string"> ===&quot;</span></span><span class="token punctuation">)</span>

        <span class="token comment"># 获取实时数据</span>
        realtime_data <span class="token operator">=</span> provider<span class="token punctuation">.</span>get_stock_realtime<span class="token punctuation">(</span>ts_codes<span class="token operator">=</span>codes<span class="token punctuation">)</span>

        <span class="token comment"># 按涨跌幅排序</span>
        sorted_data <span class="token operator">=</span> <span class="token builtin">sorted</span><span class="token punctuation">(</span>realtime_data<span class="token punctuation">,</span>
                           key<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">.</span>pct_change<span class="token punctuation">,</span>
                           reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

        <span class="token comment"># 打印</span>
        <span class="token keyword">for</span> data <span class="token keyword">in</span> sorted_data<span class="token punctuation">:</span>
            emoji <span class="token operator">=</span> <span class="token string">&quot;📈&quot;</span> <span class="token keyword">if</span> data<span class="token punctuation">.</span>pct_change <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token string">&quot;📉&quot;</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>emoji<span class="token punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">{</span>data<span class="token punctuation">.</span>code<span class="token punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">{</span>data<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span><span class="token string">: &quot;</span></span>
                  <span class="token string-interpolation"><span class="token string">f&quot;¥</span><span class="token interpolation"><span class="token punctuation">{</span>data<span class="token punctuation">.</span>price<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string"> &quot;</span></span>
                  <span class="token string-interpolation"><span class="token string">f&quot;(</span><span class="token interpolation"><span class="token punctuation">{</span>data<span class="token punctuation">.</span>pct_change<span class="token punctuation">:</span><span class="token format-spec">+.2f</span><span class="token punctuation">}</span></span><span class="token string">%)&quot;</span></span><span class="token punctuation">)</span>

        <span class="token comment"># 等待下次更新</span>
        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>interval<span class="token punctuation">)</span>

<span class="token comment"># 监控自选股</span>
monitor_stocks<span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token string">&#39;600519.SH&#39;</span><span class="token punctuation">,</span>  <span class="token comment"># 贵州茅台</span>
    <span class="token string">&#39;000858.SZ&#39;</span><span class="token punctuation">,</span>  <span class="token comment"># 五粮液</span>
    <span class="token string">&#39;601318.SH&#39;</span><span class="token punctuation">,</span>  <span class="token comment"># 中国平安</span>
    <span class="token string">&#39;000001.SZ&#39;</span><span class="token punctuation">,</span>  <span class="token comment"># 平安银行</span>
<span class="token punctuation">]</span><span class="token punctuation">,</span> interval<span class="token operator">=</span><span class="token number">60</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="示例3-计算均线策略" tabindex="-1"><a class="header-anchor" href="#示例3-计算均线策略" aria-hidden="true">#</a> 示例3: 计算均线策略</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">calculate_moving_average</span><span class="token punctuation">(</span>ts_code<span class="token punctuation">,</span> days<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;计算移动平均线&quot;&quot;&quot;</span>
    provider <span class="token operator">=</span> TushareProvider<span class="token punctuation">(</span>token<span class="token operator">=</span>settings<span class="token punctuation">.</span>tushare_token<span class="token punctuation">)</span>

    <span class="token comment"># 获取最近60天数据</span>
    <span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime<span class="token punctuation">,</span> timedelta
    end_date <span class="token operator">=</span> datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&#39;%Y%m%d&#39;</span><span class="token punctuation">)</span>
    start_date <span class="token operator">=</span> <span class="token punctuation">(</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> timedelta<span class="token punctuation">(</span>days<span class="token operator">=</span>days<span class="token operator">*</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&#39;%Y%m%d&#39;</span><span class="token punctuation">)</span>

    stocks <span class="token operator">=</span> provider<span class="token punctuation">.</span>get_stock_daily<span class="token punctuation">(</span>
        ts_code<span class="token operator">=</span>ts_code<span class="token punctuation">,</span>
        start_date<span class="token operator">=</span>start_date<span class="token punctuation">,</span>
        end_date<span class="token operator">=</span>end_date
    <span class="token punctuation">)</span>

    <span class="token comment"># 提取收盘价</span>
    closes <span class="token operator">=</span> <span class="token punctuation">[</span>s<span class="token punctuation">.</span>close <span class="token keyword">for</span> s <span class="token keyword">in</span> stocks <span class="token keyword">if</span> s<span class="token punctuation">.</span>close<span class="token punctuation">]</span>

    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>closes<span class="token punctuation">)</span> <span class="token operator">&lt;</span> days<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;数据不足&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>

    <span class="token comment"># 计算MA</span>
    ma <span class="token operator">=</span> <span class="token builtin">sum</span><span class="token punctuation">(</span>closes<span class="token punctuation">[</span><span class="token punctuation">:</span>days<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> days
    current_price <span class="token operator">=</span> closes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;股票代码: </span><span class="token interpolation"><span class="token punctuation">{</span>ts_code<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;当前价格: ¥</span><span class="token interpolation"><span class="token punctuation">{</span>current_price<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>days<span class="token punctuation">}</span></span><span class="token string">日均线: ¥</span><span class="token interpolation"><span class="token punctuation">{</span>ma<span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> current_price <span class="token operator">&gt;</span> ma<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;✅ 多头信号（价格在均线之上）&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;❌ 空头信号（价格在均线之下）&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># 测试</span>
calculate_moving_average<span class="token punctuation">(</span><span class="token string">&#39;600519.SH&#39;</span><span class="token punctuation">,</span> days<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="示例4-对比多只股票表现" tabindex="-1"><a class="header-anchor" href="#示例4-对比多只股票表现" aria-hidden="true">#</a> 示例4: 对比多只股票表现</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">compare_stocks</span><span class="token punctuation">(</span>codes<span class="token punctuation">,</span> start_date<span class="token punctuation">,</span> end_date<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;对比多只股票表现&quot;&quot;&quot;</span>
    provider <span class="token operator">=</span> TushareProvider<span class="token punctuation">(</span>token<span class="token operator">=</span>settings<span class="token punctuation">.</span>tushare_token<span class="token punctuation">)</span>

    results <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> code <span class="token keyword">in</span> codes<span class="token punctuation">:</span>
        stocks <span class="token operator">=</span> provider<span class="token punctuation">.</span>get_stock_daily<span class="token punctuation">(</span>code<span class="token punctuation">,</span> start_date<span class="token punctuation">,</span> end_date<span class="token punctuation">)</span>

        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>stocks<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">2</span><span class="token punctuation">:</span>
            <span class="token comment"># 计算区间涨跌幅</span>
            first_close <span class="token operator">=</span> stocks<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>close  <span class="token comment"># 第一天</span>
            last_close <span class="token operator">=</span> stocks<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>close    <span class="token comment"># 最后一天</span>

            <span class="token keyword">if</span> first_close <span class="token keyword">and</span> last_close<span class="token punctuation">:</span>
                pct_change <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>last_close <span class="token operator">-</span> first_close<span class="token punctuation">)</span> <span class="token operator">/</span> first_close<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span>

                results<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span>
                    <span class="token string">&#39;code&#39;</span><span class="token punctuation">:</span> code<span class="token punctuation">,</span>
                    <span class="token string">&#39;start_price&#39;</span><span class="token punctuation">:</span> first_close<span class="token punctuation">,</span>
                    <span class="token string">&#39;end_price&#39;</span><span class="token punctuation">:</span> last_close<span class="token punctuation">,</span>
                    <span class="token string">&#39;pct_change&#39;</span><span class="token punctuation">:</span> pct_change
                <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token comment"># 排序</span>
    results<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>key<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token string">&#39;pct_change&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

    <span class="token comment"># 打印结果</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;\\n</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token string">&#39;代码&#39;</span><span class="token punctuation">:</span><span class="token format-spec">&lt;12</span><span class="token punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token string">&#39;起始价&#39;</span><span class="token punctuation">:</span><span class="token format-spec">&lt;10</span><span class="token punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token string">&#39;结束价&#39;</span><span class="token punctuation">:</span><span class="token format-spec">&lt;10</span><span class="token punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token string">&#39;涨跌幅&#39;</span><span class="token punctuation">:</span><span class="token format-spec">&lt;10</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span> <span class="token operator">*</span> <span class="token number">50</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> r <span class="token keyword">in</span> results<span class="token punctuation">:</span>
        emoji <span class="token operator">=</span> <span class="token string">&quot;📈&quot;</span> <span class="token keyword">if</span> r<span class="token punctuation">[</span><span class="token string">&#39;pct_change&#39;</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token string">&quot;📉&quot;</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>r<span class="token punctuation">[</span><span class="token string">&#39;code&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token format-spec">&lt;12</span><span class="token punctuation">}</span></span><span class="token string"> &quot;</span></span>
              <span class="token string-interpolation"><span class="token string">f&quot;¥</span><span class="token interpolation"><span class="token punctuation">{</span>r<span class="token punctuation">[</span><span class="token string">&#39;start_price&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token format-spec">&lt;9.2f</span><span class="token punctuation">}</span></span><span class="token string"> &quot;</span></span>
              <span class="token string-interpolation"><span class="token string">f&quot;¥</span><span class="token interpolation"><span class="token punctuation">{</span>r<span class="token punctuation">[</span><span class="token string">&#39;end_price&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token format-spec">&lt;9.2f</span><span class="token punctuation">}</span></span><span class="token string"> &quot;</span></span>
              <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>emoji<span class="token punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token punctuation">{</span>r<span class="token punctuation">[</span><span class="token string">&#39;pct_change&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token format-spec">+.2f</span><span class="token punctuation">}</span></span><span class="token string">%&quot;</span></span><span class="token punctuation">)</span>

<span class="token comment"># 对比银行股</span>
compare_stocks<span class="token punctuation">(</span>
    codes<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;600000.SH&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;601318.SH&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;000001.SZ&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;600036.SH&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    start_date<span class="token operator">=</span><span class="token string">&#39;20240101&#39;</span><span class="token punctuation">,</span>
    end_date<span class="token operator">=</span><span class="token string">&#39;20240115&#39;</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="示例5-集成到kafka-项目实际用法" tabindex="-1"><a class="header-anchor" href="#示例5-集成到kafka-项目实际用法" aria-hidden="true">#</a> 示例5: 集成到Kafka（项目实际用法）</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> src<span class="token punctuation">.</span>kafka_producer<span class="token punctuation">.</span>producer <span class="token keyword">import</span> KafkaProducer
<span class="token keyword">from</span> src<span class="token punctuation">.</span>data_providers<span class="token punctuation">.</span>tushare_provider <span class="token keyword">import</span> TushareProvider
<span class="token keyword">from</span> src<span class="token punctuation">.</span>config <span class="token keyword">import</span> settings
<span class="token keyword">import</span> time
<span class="token keyword">import</span> json

<span class="token keyword">def</span> <span class="token function">publish_stock_data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;定时采集股票数据并发送到Kafka&quot;&quot;&quot;</span>
    <span class="token comment"># 初始化</span>
    provider <span class="token operator">=</span> TushareProvider<span class="token punctuation">(</span>token<span class="token operator">=</span>settings<span class="token punctuation">.</span>tushare_token<span class="token punctuation">)</span>
    producer <span class="token operator">=</span> KafkaProducer<span class="token punctuation">(</span>
        bootstrap_servers<span class="token operator">=</span>settings<span class="token punctuation">.</span>kafka_bootstrap_servers
    <span class="token punctuation">)</span>

    <span class="token comment"># 股票代码列表</span>
    codes <span class="token operator">=</span> settings<span class="token punctuation">.</span>stock_codes<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>

    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        <span class="token comment"># 获取实时数据</span>
        realtime_data <span class="token operator">=</span> provider<span class="token punctuation">.</span>get_stock_realtime<span class="token punctuation">(</span>ts_codes<span class="token operator">=</span>codes<span class="token punctuation">)</span>

        <span class="token comment"># 发送到Kafka</span>
        <span class="token keyword">for</span> data <span class="token keyword">in</span> realtime_data<span class="token punctuation">:</span>
            message <span class="token operator">=</span> <span class="token punctuation">{</span>
                <span class="token string">&#39;code&#39;</span><span class="token punctuation">:</span> data<span class="token punctuation">.</span>code<span class="token punctuation">,</span>
                <span class="token string">&#39;name&#39;</span><span class="token punctuation">:</span> data<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
                <span class="token string">&#39;price&#39;</span><span class="token punctuation">:</span> data<span class="token punctuation">.</span>price<span class="token punctuation">,</span>
                <span class="token string">&#39;change&#39;</span><span class="token punctuation">:</span> data<span class="token punctuation">.</span>change<span class="token punctuation">,</span>
                <span class="token string">&#39;pct_change&#39;</span><span class="token punctuation">:</span> data<span class="token punctuation">.</span>pct_change<span class="token punctuation">,</span>
                <span class="token string">&#39;timestamp&#39;</span><span class="token punctuation">:</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>

            producer<span class="token punctuation">.</span>send<span class="token punctuation">(</span>
                topic<span class="token operator">=</span>settings<span class="token punctuation">.</span>kafka_topic_stock_realtime<span class="token punctuation">,</span>
                value<span class="token operator">=</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>message<span class="token punctuation">)</span>
            <span class="token punctuation">)</span>

            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;发送到Kafka: </span><span class="token interpolation"><span class="token punctuation">{</span>data<span class="token punctuation">.</span>code<span class="token punctuation">}</span></span><span class="token string"> ¥</span><span class="token interpolation"><span class="token punctuation">{</span>data<span class="token punctuation">.</span>price<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

        <span class="token comment"># 等待下次采集</span>
        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>settings<span class="token punctuation">.</span>collect_realtime_interval<span class="token punctuation">)</span>

<span class="token comment"># 运行</span>
<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    publish_stock_data<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题" aria-hidden="true">#</a> 常见问题</h2><h3 id="q1-tushare-token无效或过期" tabindex="-1"><a class="header-anchor" href="#q1-tushare-token无效或过期" aria-hidden="true">#</a> Q1: Tushare Token无效或过期？</h3><p><strong>错误信息：</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>抱歉，您没有访问该接口的权限，权限的具体详情访问：https://tushare.pro/document/1?doc_id=108
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>解决方案：</strong></p><ol><li><p><strong>检查Token是否正确</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> tushare <span class="token keyword">as</span> ts
ts<span class="token punctuation">.</span>set_token<span class="token punctuation">(</span><span class="token string">&#39;your_token&#39;</span><span class="token punctuation">)</span>
pro <span class="token operator">=</span> ts<span class="token punctuation">.</span>pro_api<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 测试</span>
df <span class="token operator">=</span> pro<span class="token punctuation">.</span>trade_cal<span class="token punctuation">(</span>exchange<span class="token operator">=</span><span class="token string">&#39;SSE&#39;</span><span class="token punctuation">,</span> start_date<span class="token operator">=</span><span class="token string">&#39;20240101&#39;</span><span class="token punctuation">,</span> end_date<span class="token operator">=</span><span class="token string">&#39;20240115&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>检查积分是否足够</strong></p><ul><li>登录 https://tushare.pro/user/token</li><li>查看积分余额</li><li>免费用户：120积分/天</li><li>某些接口需要更高权限</li></ul></li><li><p><strong>使用低积分接口</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 高积分接口（需要2000+积分）</span>
df <span class="token operator">=</span> pro<span class="token punctuation">.</span>daily_basic<span class="token punctuation">(</span>ts_code<span class="token operator">=</span><span class="token string">&#39;000001.SZ&#39;</span><span class="token punctuation">,</span> trade_date<span class="token operator">=</span><span class="token string">&#39;20240115&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 低积分接口（推荐）</span>
df <span class="token operator">=</span> pro<span class="token punctuation">.</span>daily<span class="token punctuation">(</span>ts_code<span class="token operator">=</span><span class="token string">&#39;000001.SZ&#39;</span><span class="token punctuation">,</span> start_date<span class="token operator">=</span><span class="token string">&#39;20240101&#39;</span><span class="token punctuation">,</span> end_date<span class="token operator">=</span><span class="token string">&#39;20240115&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="q2-akshare数据获取失败" tabindex="-1"><a class="header-anchor" href="#q2-akshare数据获取失败" aria-hidden="true">#</a> Q2: AKShare数据获取失败？</h3><p><strong>错误信息：</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>requests.exceptions.ConnectionError: HTTPSConnectionPool...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>解决方案：</strong></p><ol><li><p><strong>检查网络连接</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ping</span> baidu.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>重试机制</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> time

<span class="token keyword">def</span> <span class="token function">fetch_with_retry</span><span class="token punctuation">(</span>func<span class="token punctuation">,</span> max_retries<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>max_retries<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> func<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;尝试 </span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span>max_retries<span class="token punctuation">}</span></span><span class="token string"> 失败: </span><span class="token interpolation"><span class="token punctuation">{</span>e<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token boolean">None</span>

<span class="token comment"># 使用</span>
data <span class="token operator">=</span> fetch_with_retry<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> ak<span class="token punctuation">.</span>stock_zh_a_spot_em<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>使用Tushare作为备选</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">get_stock_data</span><span class="token punctuation">(</span>ts_code<span class="token punctuation">,</span> start_date<span class="token punctuation">,</span> end_date<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># 优先使用Tushare</span>
    <span class="token keyword">if</span> tushare_provider<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> tushare_provider<span class="token punctuation">.</span>get_stock_daily<span class="token punctuation">(</span>ts_code<span class="token punctuation">,</span> start_date<span class="token punctuation">,</span> end_date<span class="token punctuation">)</span>
    <span class="token comment"># 备选AKShare</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> akshare_provider<span class="token punctuation">.</span>get_stock_daily<span class="token punctuation">(</span>ts_code<span class="token punctuation">,</span> start_date<span class="token punctuation">,</span> end_date<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="q3-股票代码格式错误" tabindex="-1"><a class="header-anchor" href="#q3-股票代码格式错误" aria-hidden="true">#</a> Q3: 股票代码格式错误？</h3><p><strong>常见错误：</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># ❌ 错误格式</span>
<span class="token string">&#39;000001&#39;</span>      <span class="token comment"># 缺少交易所后缀</span>
<span class="token string">&#39;SZ000001&#39;</span>    <span class="token comment"># 顺序错误</span>
<span class="token string">&#39;000001-SZ&#39;</span>   <span class="token comment"># 分隔符错误</span>

<span class="token comment"># ✅ 正确格式</span>
<span class="token string">&#39;000001.SZ&#39;</span>   <span class="token comment"># 深市</span>
<span class="token string">&#39;600000.SH&#39;</span>   <span class="token comment"># 沪市</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>转换函数：</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">normalize_stock_code</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;标准化股票代码&quot;&quot;&quot;</span>
    <span class="token comment"># 去除空格和特殊字符</span>
    code <span class="token operator">=</span> code<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment"># 如果只有6位数字，自动添加后缀</span>
    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">6</span> <span class="token keyword">and</span> code<span class="token punctuation">.</span>isdigit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> code<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">&#39;6&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>code<span class="token punctuation">}</span></span><span class="token string">.SH&quot;</span></span>  <span class="token comment"># 沪市</span>
        <span class="token keyword">elif</span> code<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>code<span class="token punctuation">}</span></span><span class="token string">.SZ&quot;</span></span>  <span class="token comment"># 深市</span>

    <span class="token comment"># 检查格式</span>
    <span class="token keyword">if</span> <span class="token string">&#39;.&#39;</span> <span class="token keyword">in</span> code<span class="token punctuation">:</span>
        parts <span class="token operator">=</span> code<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>parts<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">2</span> <span class="token keyword">and</span> parts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isdigit<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">and</span> parts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">&#39;SH&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;SZ&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> code

    <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;无效的股票代码: </span><span class="token interpolation"><span class="token punctuation">{</span>code<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

<span class="token comment"># 测试</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>normalize_stock_code<span class="token punctuation">(</span><span class="token string">&#39;000001&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 000001.SZ</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>normalize_stock_code<span class="token punctuation">(</span><span class="token string">&#39;600519&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 600519.SH</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="q4-日期格式问题" tabindex="-1"><a class="header-anchor" href="#q4-日期格式问题" aria-hidden="true">#</a> Q4: 日期格式问题？</h3><p><strong>不同API的日期格式：</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Tushare: YYYYMMDD（无分隔符）</span>
tushare_date <span class="token operator">=</span> <span class="token string">&#39;20240115&#39;</span>

<span class="token comment"># AKShare: YYYY-MM-DD（横杠分隔）</span>
akshare_date <span class="token operator">=</span> <span class="token string">&#39;2024-01-15&#39;</span>

<span class="token comment"># 转换函数</span>
<span class="token keyword">def</span> <span class="token function">to_tushare_date</span><span class="token punctuation">(</span>date_str<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;转换为Tushare日期格式&quot;&quot;&quot;</span>
    <span class="token keyword">return</span> date_str<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;-&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">to_akshare_date</span><span class="token punctuation">(</span>date_str<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;转换为AKShare日期格式&quot;&quot;&quot;</span>
    <span class="token keyword">if</span> <span class="token string">&#39;-&#39;</span> <span class="token keyword">not</span> <span class="token keyword">in</span> date_str<span class="token punctuation">:</span>
        <span class="token comment"># YYYYMMDD -&gt; YYYY-MM-DD</span>
        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>date_str<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token format-spec">4]</span><span class="token punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token punctuation">{</span>date_str<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token format-spec">6]</span><span class="token punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token punctuation">{</span>date_str<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token format-spec">]</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>
    <span class="token keyword">return</span> date_str

<span class="token comment"># 使用</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>to_tushare_date<span class="token punctuation">(</span><span class="token string">&#39;2024-01-15&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 20240115</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>to_akshare_date<span class="token punctuation">(</span><span class="token string">&#39;20240115&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 2024-01-15</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="q5-数据更新时间" tabindex="-1"><a class="header-anchor" href="#q5-数据更新时间" aria-hidden="true">#</a> Q5: 数据更新时间？</h3><p><strong>A股交易时间：</strong></p><ul><li>开盘：9:30 - 11:30, 13:00 - 15:00</li><li>数据更新：通常在收盘后30分钟内</li></ul><p><strong>建议采集时间：</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 日线数据：收盘后采集</span>
DAILY_COLLECT_TIME <span class="token operator">=</span> <span class="token string">&quot;15:30&quot;</span>  <span class="token comment"># 下午3:30</span>

<span class="token comment"># 实时数据：交易时段每分钟采集</span>
REALTIME_INTERVAL <span class="token operator">=</span> <span class="token number">60</span>  <span class="token comment"># 60秒</span>

<span class="token comment"># 周末和节假日不交易</span>
<span class="token keyword">import</span> datetime

<span class="token keyword">def</span> <span class="token function">is_trading_day</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;判断是否交易日&quot;&quot;&quot;</span>
    today <span class="token operator">=</span> datetime<span class="token punctuation">.</span>date<span class="token punctuation">.</span>today<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># 周末</span>
    <span class="token keyword">if</span> today<span class="token punctuation">.</span>weekday<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">5</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>
    <span class="token comment"># TODO: 添加节假日判断</span>
    <span class="token keyword">return</span> <span class="token boolean">True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="最佳实践" tabindex="-1"><a class="header-anchor" href="#最佳实践" aria-hidden="true">#</a> 最佳实践</h2><h3 id="_1-使用数据缓存" tabindex="-1"><a class="header-anchor" href="#_1-使用数据缓存" aria-hidden="true">#</a> 1. 使用数据缓存</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pickle
<span class="token keyword">from</span> pathlib <span class="token keyword">import</span> Path

<span class="token keyword">class</span> <span class="token class-name">DataCache</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> cache_dir<span class="token operator">=</span><span class="token string">&#39;cache&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>cache_dir <span class="token operator">=</span> Path<span class="token punctuation">(</span>cache_dir<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>cache_dir<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>exist_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">get</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;从缓存读取&quot;&quot;&quot;</span>
        cache_file <span class="token operator">=</span> self<span class="token punctuation">.</span>cache_dir <span class="token operator">/</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>key<span class="token punctuation">}</span></span><span class="token string">.pkl&quot;</span></span>
        <span class="token keyword">if</span> cache_file<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>cache_file<span class="token punctuation">,</span> <span class="token string">&#39;rb&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
                <span class="token keyword">return</span> pickle<span class="token punctuation">.</span>load<span class="token punctuation">(</span>f<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">None</span>

    <span class="token keyword">def</span> <span class="token function">set</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;写入缓存&quot;&quot;&quot;</span>
        cache_file <span class="token operator">=</span> self<span class="token punctuation">.</span>cache_dir <span class="token operator">/</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>key<span class="token punctuation">}</span></span><span class="token string">.pkl&quot;</span></span>
        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>cache_file<span class="token punctuation">,</span> <span class="token string">&#39;wb&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
            pickle<span class="token punctuation">.</span>dump<span class="token punctuation">(</span>value<span class="token punctuation">,</span> f<span class="token punctuation">)</span>

<span class="token comment"># 使用</span>
cache <span class="token operator">=</span> DataCache<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">get_stock_data_cached</span><span class="token punctuation">(</span>ts_code<span class="token punctuation">,</span> start_date<span class="token punctuation">,</span> end_date<span class="token punctuation">)</span><span class="token punctuation">:</span>
    key <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>ts_code<span class="token punctuation">}</span></span><span class="token string">_</span><span class="token interpolation"><span class="token punctuation">{</span>start_date<span class="token punctuation">}</span></span><span class="token string">_</span><span class="token interpolation"><span class="token punctuation">{</span>end_date<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>

    <span class="token comment"># 先从缓存读取</span>
    data <span class="token operator">=</span> cache<span class="token punctuation">.</span>get<span class="token punctuation">(</span>key<span class="token punctuation">)</span>
    <span class="token keyword">if</span> data<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;从缓存读取&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> data

    <span class="token comment"># 从API获取</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;从API获取&quot;</span><span class="token punctuation">)</span>
    data <span class="token operator">=</span> provider<span class="token punctuation">.</span>get_stock_daily<span class="token punctuation">(</span>ts_code<span class="token punctuation">,</span> start_date<span class="token punctuation">,</span> end_date<span class="token punctuation">)</span>

    <span class="token comment"># 存入缓存</span>
    cache<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> data<span class="token punctuation">)</span>
    <span class="token keyword">return</span> data
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-异常处理和重试" tabindex="-1"><a class="header-anchor" href="#_2-异常处理和重试" aria-hidden="true">#</a> 2. 异常处理和重试</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> time
<span class="token keyword">from</span> functools <span class="token keyword">import</span> wraps

<span class="token keyword">def</span> <span class="token function">retry_on_error</span><span class="token punctuation">(</span>max_retries<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> delay<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;重试装饰器&quot;&quot;&quot;</span>
    <span class="token keyword">def</span> <span class="token function">decorator</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token decorator annotation punctuation">@wraps</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span>
        <span class="token keyword">def</span> <span class="token function">wrapper</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">for</span> attempt <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>max_retries<span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token keyword">try</span><span class="token punctuation">:</span>
                    <span class="token keyword">return</span> func<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>
                <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
                    <span class="token keyword">if</span> attempt <span class="token operator">&lt;</span> max_retries <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">:</span>
                        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;尝试 </span><span class="token interpolation"><span class="token punctuation">{</span>attempt <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">}</span></span><span class="token string"> 失败: </span><span class="token interpolation"><span class="token punctuation">{</span>e<span class="token punctuation">}</span></span><span class="token string">，</span><span class="token interpolation"><span class="token punctuation">{</span>delay<span class="token punctuation">}</span></span><span class="token string">秒后重试...&quot;</span></span><span class="token punctuation">)</span>
                        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>delay<span class="token punctuation">)</span>
                    <span class="token keyword">else</span><span class="token punctuation">:</span>
                        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;达到最大重试次数，失败: </span><span class="token interpolation"><span class="token punctuation">{</span>e<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
                        <span class="token keyword">raise</span>
        <span class="token keyword">return</span> wrapper
    <span class="token keyword">return</span> decorator

<span class="token comment"># 使用</span>
<span class="token decorator annotation punctuation">@retry_on_error</span><span class="token punctuation">(</span>max_retries<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> delay<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">fetch_data</span><span class="token punctuation">(</span>ts_code<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> provider<span class="token punctuation">.</span>get_stock_daily<span class="token punctuation">(</span>ts_code<span class="token punctuation">,</span> <span class="token string">&#39;20240101&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;20240115&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-批量获取优化" tabindex="-1"><a class="header-anchor" href="#_3-批量获取优化" aria-hidden="true">#</a> 3. 批量获取优化</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">batch_fetch_stocks</span><span class="token punctuation">(</span>codes<span class="token punctuation">,</span> start_date<span class="token punctuation">,</span> end_date<span class="token punctuation">,</span> batch_size<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> delay<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;批量获取股票数据，避免频繁请求&quot;&quot;&quot;</span>
    all_data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>codes<span class="token punctuation">)</span><span class="token punctuation">,</span> batch_size<span class="token punctuation">)</span><span class="token punctuation">:</span>
        batch <span class="token operator">=</span> codes<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i<span class="token operator">+</span>batch_size<span class="token punctuation">]</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;处理批次 </span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token operator">//</span>batch_size <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>codes<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">//</span>batch_size <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

        <span class="token keyword">for</span> code <span class="token keyword">in</span> batch<span class="token punctuation">:</span>
            <span class="token keyword">try</span><span class="token punctuation">:</span>
                data <span class="token operator">=</span> provider<span class="token punctuation">.</span>get_stock_daily<span class="token punctuation">(</span>code<span class="token punctuation">,</span> start_date<span class="token punctuation">,</span> end_date<span class="token punctuation">)</span>
                all_data<span class="token punctuation">[</span>code<span class="token punctuation">]</span> <span class="token operator">=</span> data
            <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;获取 </span><span class="token interpolation"><span class="token punctuation">{</span>code<span class="token punctuation">}</span></span><span class="token string"> 失败: </span><span class="token interpolation"><span class="token punctuation">{</span>e<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

        <span class="token comment"># 批次间延迟</span>
        <span class="token keyword">if</span> i <span class="token operator">+</span> batch_size <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>codes<span class="token punctuation">)</span><span class="token punctuation">:</span>
            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>delay<span class="token punctuation">)</span>

    <span class="token keyword">return</span> all_data

<span class="token comment"># 使用</span>
codes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;000001.SZ&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;000002.SZ&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;600000.SH&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;600519.SH&#39;</span><span class="token punctuation">]</span>
data <span class="token operator">=</span> batch_fetch_stocks<span class="token punctuation">(</span>codes<span class="token punctuation">,</span> <span class="token string">&#39;20240101&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;20240115&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-日志记录" tabindex="-1"><a class="header-anchor" href="#_4-日志记录" aria-hidden="true">#</a> 4. 日志记录</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> loguru <span class="token keyword">import</span> logger

<span class="token comment"># 配置日志</span>
logger<span class="token punctuation">.</span>add<span class="token punctuation">(</span>
    <span class="token string">&quot;logs/market_data_{time}.log&quot;</span><span class="token punctuation">,</span>
    rotation<span class="token operator">=</span><span class="token string">&quot;1 day&quot;</span><span class="token punctuation">,</span>
    retention<span class="token operator">=</span><span class="token string">&quot;30 days&quot;</span><span class="token punctuation">,</span>
    level<span class="token operator">=</span><span class="token string">&quot;INFO&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">fetch_with_log</span><span class="token punctuation">(</span>ts_code<span class="token punctuation">,</span> start_date<span class="token punctuation">,</span> end_date<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;带日志的数据获取&quot;&quot;&quot;</span>
    logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;开始获取 </span><span class="token interpolation"><span class="token punctuation">{</span>ts_code<span class="token punctuation">}</span></span><span class="token string"> 数据: </span><span class="token interpolation"><span class="token punctuation">{</span>start_date<span class="token punctuation">}</span></span><span class="token string"> ~ </span><span class="token interpolation"><span class="token punctuation">{</span>end_date<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

    <span class="token keyword">try</span><span class="token punctuation">:</span>
        data <span class="token operator">=</span> provider<span class="token punctuation">.</span>get_stock_daily<span class="token punctuation">(</span>ts_code<span class="token punctuation">,</span> start_date<span class="token punctuation">,</span> end_date<span class="token punctuation">)</span>
        logger<span class="token punctuation">.</span>success<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;成功获取 </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string"> 条记录&quot;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> data
    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        logger<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;获取失败: </span><span class="token interpolation"><span class="token punctuation">{</span>e<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">raise</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-数据验证" tabindex="-1"><a class="header-anchor" href="#_5-数据验证" aria-hidden="true">#</a> 5. 数据验证</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">validate_stock_data</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;验证股票数据完整性&quot;&quot;&quot;</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> data<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string">&quot;数据为空&quot;</span>

    <span class="token keyword">for</span> stock <span class="token keyword">in</span> data<span class="token punctuation">:</span>
        <span class="token comment"># 检查必要字段</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> stock<span class="token punctuation">.</span>trade_date<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f&quot;缺少交易日期&quot;</span></span>

        <span class="token comment"># 检查价格合理性</span>
        <span class="token keyword">if</span> stock<span class="token punctuation">.</span>close <span class="token keyword">and</span> <span class="token punctuation">(</span>stock<span class="token punctuation">.</span>close <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token keyword">or</span> stock<span class="token punctuation">.</span>close <span class="token operator">&gt;</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f&quot;异常价格: </span><span class="token interpolation"><span class="token punctuation">{</span>stock<span class="token punctuation">.</span>close<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>

        <span class="token comment"># 检查涨跌幅合理性</span>
        <span class="token keyword">if</span> stock<span class="token punctuation">.</span>pct_chg <span class="token keyword">and</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>stock<span class="token punctuation">.</span>pct_chg<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">20</span><span class="token punctuation">:</span>
            <span class="token comment"># A股有涨跌停限制（一般±10%，ST股票±5%）</span>
            <span class="token keyword">return</span> <span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f&quot;异常涨跌幅: </span><span class="token interpolation"><span class="token punctuation">{</span>stock<span class="token punctuation">.</span>pct_chg<span class="token punctuation">}</span></span><span class="token string">%&quot;</span></span>

    <span class="token keyword">return</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">&quot;数据验证通过&quot;</span>

<span class="token comment"># 使用</span>
data <span class="token operator">=</span> provider<span class="token punctuation">.</span>get_stock_daily<span class="token punctuation">(</span><span class="token string">&#39;000001.SZ&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;20240101&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;20240115&#39;</span><span class="token punctuation">)</span>
is_valid<span class="token punctuation">,</span> message <span class="token operator">=</span> validate_stock_data<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token keyword">if</span> is_valid<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;数据验证失败: </span><span class="token interpolation"><span class="token punctuation">{</span>message<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><h3 id="推荐使用方案" tabindex="-1"><a class="header-anchor" href="#推荐使用方案" aria-hidden="true">#</a> 推荐使用方案</h3><p><strong>方案1: Tushare主力 + AKShare备用（推荐）⭐</strong></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> src<span class="token punctuation">.</span>config <span class="token keyword">import</span> settings

<span class="token comment"># 初始化两个Provider</span>
tushare_provider <span class="token operator">=</span> TushareProvider<span class="token punctuation">(</span>token<span class="token operator">=</span>settings<span class="token punctuation">.</span>tushare_token<span class="token punctuation">)</span>
akshare_provider <span class="token operator">=</span> AKShareProvider<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">get_stock_data</span><span class="token punctuation">(</span>ts_code<span class="token punctuation">,</span> start_date<span class="token punctuation">,</span> end_date<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;智能选择数据源&quot;&quot;&quot;</span>
    <span class="token comment"># 优先Tushare</span>
    <span class="token keyword">if</span> tushare_provider<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> tushare_provider<span class="token punctuation">.</span>get_stock_daily<span class="token punctuation">(</span>ts_code<span class="token punctuation">,</span> start_date<span class="token punctuation">,</span> end_date<span class="token punctuation">)</span>
    <span class="token comment"># 备用AKShare</span>
    <span class="token keyword">elif</span> akshare_provider<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> akshare_provider<span class="token punctuation">.</span>get_stock_daily<span class="token punctuation">(</span>ts_code<span class="token punctuation">,</span> start_date<span class="token punctuation">,</span> end_date<span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">&quot;所有数据源不可用&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>方案2: 纯AKShare（快速开始）</strong></p><p>适合不想注册Tushare的用户：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>provider <span class="token operator">=</span> AKShareProvider<span class="token punctuation">(</span><span class="token punctuation">)</span>
data <span class="token operator">=</span> provider<span class="token punctuation">.</span>get_stock_daily<span class="token punctuation">(</span><span class="token string">&#39;000001.SZ&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2024-01-01&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2024-01-15&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="下一步" tabindex="-1"><a class="header-anchor" href="#下一步" aria-hidden="true">#</a> 下一步</h3><ol><li>✅ 注册Tushare获取Token</li><li>✅ 配置 <code>.env</code> 文件</li><li>✅ 运行测试脚本验证</li><li>✅ 集成到Kafka采集服务</li><li>✅ 搭建前端展示界面</li></ol><h3 id="参考资源" tabindex="-1"><a class="header-anchor" href="#参考资源" aria-hidden="true">#</a> 参考资源</h3><ul><li><strong>Tushare文档</strong>: https://tushare.pro/document/2</li><li><strong>AKShare文档</strong>: https://akshare.akfamily.xyz/data/stock/stock.html</li><li><strong>项目代码</strong>: <code>/Users/youweichen/quant-trading-platform/market-data-service</code></li></ul><hr><p><strong>提示：</strong> 你的项目已经完整实现了这两个API的封装，可以直接使用！</p>`,126),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","STOCK_DATA_API_TUTORIAL.html.vue"]]);export{r as default};
