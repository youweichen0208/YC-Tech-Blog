import{_ as n,o as a,c as s,e as t}from"./app-aY9FUwWX.js";const e={},o=t(`<h1 id="springboot" tabindex="-1"><a class="header-anchor" href="#springboot" aria-hidden="true">#</a> SpringBoot</h1><h2 id="what-is-springboot" tabindex="-1"><a class="header-anchor" href="#what-is-springboot" aria-hidden="true">#</a> What is SpringBoot?</h2><p>SpringBoot is an open-source framework within the larger Spring ecosystem designed to simplify the development, configuration, and deployment of production-ready applications based on the Spring Framework. It provides a set of conventions, defaults, and tools to accelerate the development process and reduce boilerplate code.</p><h2 id="world-before-springboot" tabindex="-1"><a class="header-anchor" href="#world-before-springboot" aria-hidden="true">#</a> World before SpringBoot</h2><h3 id="dependency-management" tabindex="-1"><a class="header-anchor" href="#dependency-management" aria-hidden="true">#</a> Dependency Management</h3><h3 id="web-xml" tabindex="-1"><a class="header-anchor" href="#web-xml" aria-hidden="true">#</a> web.xml</h3><h3 id="spring-configuration" tabindex="-1"><a class="header-anchor" href="#spring-configuration" aria-hidden="true">#</a> Spring Configuration</h3><h3 id="non-functional-requirements-nfrs" tabindex="-1"><a class="header-anchor" href="#non-functional-requirements-nfrs" aria-hidden="true">#</a> Non Functional Requirements(NFRs)</h3><ul><li>Setting up Spring Projects before SpringBoot was NOT easy. <ul><li>Dependency Management (pom.xml)</li><li>Define Web App Configuration (web.xml)</li><li>Manage Spring Beans (context.xml)</li><li>Implements Non Functional Requirements (NFRs).</li></ul></li><li>AND repeat this for every project</li><li>Typically takes a few days to set up for each project (and countless hours to maintain).</li></ul><h2 id="what-s-the-most-important-goal-of-spring-boot" tabindex="-1"><a class="header-anchor" href="#what-s-the-most-important-goal-of-spring-boot" aria-hidden="true">#</a> What&#39;s the Most Important Goal of Spring Boot?</h2><h3 id="before-spring-boot" tabindex="-1"><a class="header-anchor" href="#before-spring-boot" aria-hidden="true">#</a> Before Spring Boot:</h3><ul><li>Developers had to manually manage dependencies in the project&#39;s build configuration(e.g. Maven or Gradle)</li><li>Specifying the version numbers of each library and ensuring compatibility was a manual process.</li><li>Dependencies for Spring modules, third-party libraries, and other components had to be explicitly listed.</li></ul><h3 id="example-of-maven-configuration-without-spring-boot" tabindex="-1"><a class="header-anchor" href="#example-of-maven-configuration-without-spring-boot" aria-hidden="true">#</a> Example of Maven Configuration <strong>Without</strong> Spring Boot:</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- pom.xml --&gt;</span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- Spring Core --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.3.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!-- Spring Web --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.3.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!-- Other dependencies... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="example-of-maven-configuration-after-spring-boot" tabindex="-1"><a class="header-anchor" href="#example-of-maven-configuration-after-spring-boot" aria-hidden="true">#</a> Example of Maven Configuration <strong>After</strong> Spring Boot:</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- pom.xml --&gt;</span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- Spring Boot Starter for Web --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!-- Other starters or custom dependencies... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="example-of-web-xml-for-servlet-configuration-without-spring-boot" tabindex="-1"><a class="header-anchor" href="#example-of-web-xml-for-servlet-configuration-without-spring-boot" aria-hidden="true">#</a> Example of web.xml for Servlet Configuration <strong>Without</strong> Spring Boot:</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- web.xml --&gt;</span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span>myServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">&gt;</span></span>com.example.MyServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span>myServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">&gt;</span></span>/myservlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!-- Other servlet and filter configurations... --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="example-of-spring-boot-servlet-configuration" tabindex="-1"><a class="header-anchor" href="#example-of-spring-boot-servlet-configuration" aria-hidden="true">#</a> Example of <strong>Spring Boot Servlet Configuration</strong></h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ServletRegistrationBean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MySpringBootApplication</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">MySpringBootApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">ServletRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MyServlet</span><span class="token punctuation">&gt;</span></span> <span class="token function">myServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ServletRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;/myservlet&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>With Spring Boot, traditional XML based servlet configurations in <code>web.xml</code> are often replaced by annotations and Java-based configurations. In this example, <code>@SpringBootApplication</code> indicates that this class is the main entry point of the Spring Boot application. It also implicitly enables component scanning and auto-configuration.</p><h3 id="example-of-non-functional-requirements" tabindex="-1"><a class="header-anchor" href="#example-of-non-functional-requirements" aria-hidden="true">#</a> Example of Non-Functional Requirements:</h3><h4 id="before-spring-boot-1" tabindex="-1"><a class="header-anchor" href="#before-spring-boot-1" aria-hidden="true">#</a> Before Spring Boot:</h4><ul><li>Meeting non-functional requirements, such as security, logging, and monitoring, required manual configuration.</li><li>Developers had to integrate third-party libraries and tools to fultill these requirements.</li><li>Setting up production-ready features was often a manual and error-prone process.</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- Security Configuration Before Spring Boot --&gt;</span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">beans:</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/security<span class="token punctuation">&quot;</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>beans</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans<span class="token punctuation">&quot;</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
             <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/security
                                 http://www.springframework.org/schema/security/spring-security.xsd
                                 http://www.springframework.org/schema/beans
                                 http://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>http</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intercept-url</span> <span class="token attr-name">pattern</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/secure/**<span class="token punctuation">&quot;</span></span> <span class="token attr-name">access</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ROLE_USER<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
        <span class="token comment">&lt;!-- Other security configurations... --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>http</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>authentication-manager</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>authentication-provider</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user-service</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>user<span class="token punctuation">&quot;</span></span> <span class="token attr-name">password</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">authorities</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ROLE_USER<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>user-service</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>authentication-provider</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>authentication-manager</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">beans:</span>beans</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="with-spring-boot-security-configuration" tabindex="-1"><a class="header-anchor" href="#with-spring-boot-security-configuration" aria-hidden="true">#</a> With Spring Boot Security Configuration:</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>web<span class="token punctuation">.</span>configuration<span class="token punctuation">.</span></span><span class="token class-name">EnableWebSecurity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>core<span class="token punctuation">.</span>userdetails<span class="token punctuation">.</span></span><span class="token class-name">User</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>core<span class="token punctuation">.</span>userdetails<span class="token punctuation">.</span></span><span class="token class-name">UserDetailsService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>provisioning<span class="token punctuation">.</span></span><span class="token class-name">InMemoryUserDetailsManager</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@EnableWebSecurity</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecurityConfig</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">UserDetailsService</span> <span class="token function">userDetailsService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">InMemoryUserDetailsManager</span><span class="token punctuation">(</span>
            <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token function">withDefaultPasswordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">username</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">password</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">roles</span><span class="token punctuation">(</span><span class="token string">&quot;USER&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>With Spring Boot, configuring non-functional requirements like security is significantly streamlined.</p><p>SpringBoot can help us build <strong>PRODUCTION READY</strong> apps <strong>QUICKLY</strong></p><ul><li>Build <strong>Quickly</strong><ul><li>Spring Initializer</li><li>Spring Boot Starter Project</li><li>Spring Boot Auto Configuration</li><li>Spring Boot DevTools</li></ul></li><li>Be <strong>Production Ready</strong><ul><li>Logging</li><li>Different Configuration for Different Environments. <ul><li>Profiles, ConfigurationProperties</li><li>Monitoring (Spring Boot Actuator)</li></ul></li><li>Simplify deployment with Spring Boot embedded servers.</li></ul></li></ul><h2 id="exploring-spring-boot-starter-project" tabindex="-1"><a class="header-anchor" href="#exploring-spring-boot-starter-project" aria-hidden="true">#</a> Exploring Spring Boot Starter Project:</h2><ul><li><p>I need a lot of frameworks to build application features:</p><ul><li><strong>Build a REST API</strong>: I need Spring, SpringMVC, Tomcat, JSON conversion...</li><li><strong>Write Unit Tests</strong>: I need Spring Test, JUnit, Mockito</li></ul></li><li><p>How can I group them and make it easy to build applications?</p><ul><li><strong>Starters:</strong> Convenient <strong>dependency descriptors</strong> for diff.features.</li></ul></li><li><p><strong>Spring Boot</strong> provides variety of starter projects:</p><ul><li><strong>Web Application &amp; REST API</strong> - Spring Boot Starter Web (SpringMVC, Spring-web, Spring-boot-starter-tomcat, Spring-boot-starter-json)</li><li><strong>Unit Tests</strong> - Spring Boot Starter Test</li><li><strong>Talk to database using JPA</strong> - Spring Boot Starter Data JPA</li><li><strong>Talk to database using JDBC</strong> - Spring Boot Starter JDBC</li><li><strong>Secure our web application or REST API</strong> - Spring Boot Starter Security</li></ul></li><li><p>(REMEMBER) <strong>Starters:</strong> Define all application dependencies</p></li><li><p>Advantages:</p><ul><li>streamlined development</li><li>easier upgrades</li><li>reduced configuration errors</li><li>enhance productivity</li><li>ecosystem integration</li></ul></li></ul><h2 id="simplify-deployment-with-spring-boot-embedded-servers" tabindex="-1"><a class="header-anchor" href="#simplify-deployment-with-spring-boot-embedded-servers" aria-hidden="true">#</a> Simplify Deployment with Spring Boot Embedded Servers:</h2><h3 id="old-approach" tabindex="-1"><a class="header-anchor" href="#old-approach" aria-hidden="true">#</a> Old Approach:</h3><ol><li>Install Java</li><li>Install Web/Application Server</li><li>Deploy the application WAR (WEB Archive) <ul><li>complex to setup</li></ul></li></ol><h3 id="embedded-server-simpler-alternative" tabindex="-1"><a class="header-anchor" href="#embedded-server-simpler-alternative" aria-hidden="true">#</a> <strong>Embedded Server</strong> - Simpler alternative</h3><ol><li>Install Java</li><li>Run JAR file</li></ol><h2 id="spring-boot-auto-configuration" tabindex="-1"><a class="header-anchor" href="#spring-boot-auto-configuration" aria-hidden="true">#</a> Spring Boot Auto Configuration</h2><p>Spring Boot autoconfiguration is a feature that simplifies the configuration of Spring applications by automatically configuring beans based on the project&#39;s dependencies and the environment. It aims to reduce the amount of boilerplate code developers need to write when setting up a Spring application.</p><p>When we include the necessary dependencies in our project&#39;s configuration (<code>pom.xml</code> file for Maven or <code>build.gradle</code> for Gradle) and provide relevant configuration values in <code>application.properties</code> or <code>application.yml</code>, Spring Boot&#39;s autoconfiguration takes care of the rest.</p><ol><li><strong>Include Dependencies</strong>&quot; <ul><li>Add the required Spring Boot starter dependencies to our project configuration. These starters contain pre-packaged configurations for common tasks, such as data access, web development, and more.</li></ul></li><li><strong>Define Configuration Properties</strong><ul><li>Set configuration properties in <code>application.properties</code> or <code>application.yml</code> to customize the behavior of our application. For example, we might define database connection details, server ports, or other settings.</li></ul></li><li><strong>Let Spring Boot Autoconfigure:</strong><ul><li>With the dependencies and configuration properties in place, Spring Boot&#39;s autoconfiguration kicks in. It automatically configures beans, components, and other settings based on conventions and the provided configuration.</li></ul></li><li><strong>Focus on Business Logic</strong>: <ul><li>As a developer, we can focus more on writing business logic and application features. Spring Boot handles the boilerplate configuration and setup, allowing us to build on top of a solid foundation.</li></ul></li></ol><h2 id="understanding-the-glue-springbootapplication" tabindex="-1"><a class="header-anchor" href="#understanding-the-glue-springbootapplication" aria-hidden="true">#</a> Understanding the Glue - @SpringBootApplication</h2><p>The <code>@SpringBootApplication</code> is a composite annotation that includes several other annotations, such as <code>@Configuration</code>, <code>@EnableAutoConfiguration</code>, and <code>@ComponentScan</code>. This combination helps reduce boilerplate code and simplifies the configuration of a Spring application.</p><h2 id="monitor-applications-using-spring-boot-actuator" tabindex="-1"><a class="header-anchor" href="#monitor-applications-using-spring-boot-actuator" aria-hidden="true">#</a> Monitor Applications using Spring Boot Actuator</h2><p>Spring Boot Actuator is a set of production-ready features that help us monitor and manage our Spring Boot application. It provides various endpoints that expose information about our application&#39;s health, metrics, environment, and more.</p><h3 id="_1-add-actuator-dependency" tabindex="-1"><a class="header-anchor" href="#_1-add-actuator-dependency" aria-hidden="true">#</a> 1. Add Actuator Dependency:</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-configure-actuator-endpoints" tabindex="-1"><a class="header-anchor" href="#_2-configure-actuator-endpoints" aria-hidden="true">#</a> 2. Configure Actuator Endpoints:</h3><p>We can customize which endpoints to enable and configure them in our <code>application.properties</code> or <code>application.yml</code>. For example, to enable all endpoints, add the following to our configuration:</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">management.endpoints.web.exposure.include</span><span class="token punctuation">=</span><span class="token value attr-value">*</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-run-our-application" tabindex="-1"><a class="header-anchor" href="#_3-run-our-application" aria-hidden="true">#</a> 3. Run our Application</h3><p>url: http://localhost/actuator</p><h2 id="logger" tabindex="-1"><a class="header-anchor" href="#logger" aria-hidden="true">#</a> Logger</h2><p>In Spring Boot, a <code>Logger</code> is an interface provided by the SLF4j logging framework. It is used for logging messages at various levels of severity, such as debug, info, warn, and error.</p><h3 id="logger-initialization" tabindex="-1"><a class="header-anchor" href="#logger-initialization" aria-hidden="true">#</a> Logger Initialization:</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Logger</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">LoggerFactory</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyClass</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">MyClass</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In a class, we typically declare a private <code>Logger</code> instance using the LoggerFactory</p><h3 id="logging-levels" tabindex="-1"><a class="header-anchor" href="#logging-levels" aria-hidden="true">#</a> Logging Levels:</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;This is a debug message&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;This is an info message&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;This is a warning message&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;This is an error message&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>we can use different logging levels to indicate the severity of the message.</p><h3 id="parameterized-logging" tabindex="-1"><a class="header-anchor" href="#parameterized-logging" aria-hidden="true">#</a> Parameterized Logging:</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> user <span class="token operator">=</span> <span class="token string">&quot;John&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> age <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span>
logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;User {} is {} years old&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>we can use parameterized logging to improve performance and readability.</p><h3 id="configure-the-logging-levels-for-specific-packages-in-a-spring-boot-application" tabindex="-1"><a class="header-anchor" href="#configure-the-logging-levels-for-specific-packages-in-a-spring-boot-application" aria-hidden="true">#</a> configure the logging levels for specific packages in a Spring Boot application.</h3><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">logging.level.org.springframework</span><span class="token punctuation">=</span><span class="token value attr-value">info</span>
<span class="token key attr-name">logging.level.com.miniproject.springboot.miniprojectdemo</span><span class="token punctuation">=</span><span class="token value attr-value">debug</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>logging.level.org.springframework=info</code>: This line sets the logging level for the <code>org.springframework</code> package to info. This means that log messages at the <code>debug</code> level (and below) will NOT be included in the logs. Log messages at the <code>info</code> level and higher (e.g. <code>warn</code>, <code>error</code>) will be included.</li><li><code>logging.level.com.miniproject.springboot.miniprojectdemo=debug</code>: This line sets the logging level for the package <code>com.miniproject.springboot.miniprojectdemo</code> to <code>debug</code>. This means that log messages at the <code>trace</code> level <code>debug</code>, <code>info</code>, and higher will be included in the logs for classes in this specific package.</li></ul><h2 id="build-faster-with-spring-boot-devtools" tabindex="-1"><a class="header-anchor" href="#build-faster-with-spring-boot-devtools" aria-hidden="true">#</a> Build Faster with Spring Boot DevTools:</h2><p>Spring Boot DevTools is a set of tools that makes the process of developing Spring Boot applications more convenient.</p><ul><li>Automatic Restart: DevTools monitors our classpath for changes and automatically restarts the application when it detects a change. This saves us from having to manually stop and start our application every time we make a change.</li><li>Live Reload: DevTools includes a LiveReload server that can automatically refresh our browser when it detects changes to our files.</li><li><strong>Remember:</strong> For pom.xml dependency changes, we will need to restart server manually</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-devtools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>runtime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="cross-origin-resource-sharing" tabindex="-1"><a class="header-anchor" href="#cross-origin-resource-sharing" aria-hidden="true">#</a> Cross Origin Resource Sharing</h2><p>It is a security feature implemented by web browsers to control how web pages in one domain can request and interact with resources from another domain. For example, <code>http://localhost:3000</code> is a different origin from <code>http://localhost:8080</code></p><h3 id="enable-cross-origin-requests-in-spring-boot" tabindex="-1"><a class="header-anchor" href="#enable-cross-origin-requests-in-spring-boot" aria-hidden="true">#</a> Enable cross-origin requests in Spring Boot</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">CorsRegistry</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">WebMvcConfigurer</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CorsConfig</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">WebMvcConfigurer</span> <span class="token function">corsConfigurer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">WebMvcConfigurer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addCorsMappings</span><span class="token punctuation">(</span><span class="token class-name">CorsRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                registry<span class="token punctuation">.</span><span class="token function">addMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/**&quot;</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">allowedMethods</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">allowedOrigins</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost:3000&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The provided <code>WebMvcConfigurer</code> bean for CORS configuration in a Spring Boot allows cross-origin requests from <code>http://localhost:3000</code> and permits all HTTP methods for all paths.</p>`,75),p=[o];function i(c,l){return a(),s("div",null,p)}const u=n(e,[["render",i],["__file","springboot.html.vue"]]);export{u as default};
