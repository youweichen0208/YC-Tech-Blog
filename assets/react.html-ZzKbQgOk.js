import{_ as n,o as a,c as s,e as t}from"./app-zyqUNJI3.js";const e="/assets/images/component.png",p={},o=t('<h1 id="react" tabindex="-1"><a class="header-anchor" href="#react" aria-hidden="true">#</a> React</h1><h2 id="what-is-react" tabindex="-1"><a class="header-anchor" href="#what-is-react" aria-hidden="true">#</a> What is React?</h2><ul><li><p>React is one of the most popular JavaScript libraries to build SPA (Single Page Applications)</p><ul><li>Popular alternatives: Angular, VueJS</li></ul></li><li><p>Open-source project created by Facebook</p></li><li><p>Component-based</p></li><li><p>Mostly used to build front-end web SPA applications</p><ul><li>Can also be used to create native apps for Android, iOS (React Native)</li></ul></li></ul><h2 id="creating-react-app-with-create-react-app" tabindex="-1"><a class="header-anchor" href="#creating-react-app-with-create-react-app" aria-hidden="true">#</a> Creating React App with Create React App</h2><ul><li>Prerequisite: Latest version of Node JS <ul><li>NPM - package manager: install, delete, and update JS packages</li><li>NPX - package executer: Execute JS packages directly, without installing</li></ul></li><li>Let&#39;s get started: <ul><li>cd our_folder</li><li>npx create-react-app todo-app</li><li>cd todo-app</li><li>npm start</li></ul></li></ul><h2 id="important-commands" tabindex="-1"><a class="header-anchor" href="#important-commands" aria-hidden="true">#</a> Important Commands:</h2><ul><li><strong>npm start:</strong> runs the apps in development mode</li><li><strong>npm test:</strong> run unit tests</li><li><strong>npm run build:</strong> build a production deployable unit</li><li><strong>npm install:</strong> add a dependency to our projects</li></ul><h2 id="exploring-create-react-app-folder-structure" tabindex="-1"><a class="header-anchor" href="#exploring-create-react-app-folder-structure" aria-hidden="true">#</a> Exploring Create React App Folder Structure</h2><ul><li><strong>README.md</strong>: documentation</li><li><strong>package.json</strong>: define dependencies (similar to pom.xml)</li><li><strong>node_modules</strong>: folder where all the dependencies are downloaded to</li><li><strong>React Initialization</strong>: <ul><li>public/index.html: contains root div</li><li>src/index.js: intialize React App. Loads App component <ul><li>src/index.css - styling for entire application</li></ul></li><li>src/App.js: code for app component <ul><li>src/App.css - styling for app component</li><li>src/App.test.js - unit tests for App component</li></ul></li></ul></li></ul><h2 id="why-do-we-need-react-components" tabindex="-1"><a class="header-anchor" href="#why-do-we-need-react-components" aria-hidden="true">#</a> Why do we need React components?</h2><ul><li><p>Web applications have complex structure</p><ul><li>Menu, Header, Footer, Welcome Page, Login Page, Logout Page, Todo Page etc</li></ul></li><li><p>Components help us modularize React apps</p><ul><li>Create separate components for each page element <ul><li>Menu Component</li><li>Header Component</li><li>Footer Component</li><li>...</li></ul></li><li>Why? <ul><li>Modularization</li><li>Reuse</li></ul></li></ul></li></ul><h2 id="understanding-react-components" tabindex="-1"><a class="header-anchor" href="#understanding-react-components" aria-hidden="true">#</a> Understanding React Components</h2><ul><li><p>First component typically loaded in React Apps: App Component</p></li><li><p>Parts of a Component</p><ul><li>View (JSX or JavaScript)</li><li>Logic (JavaScript)</li><li>Styling (CSS)</li><li>State (Internal Data Store)</li><li>Props (Pass Data)</li></ul></li><li><p>React component names must always start with a capital letter</p></li></ul><figure><img src="'+e+`" alt="React Component" tabindex="0" loading="lazy"><figcaption>React Component</figcaption></figure><h2 id="understanding-state-in-react" tabindex="-1"><a class="header-anchor" href="#understanding-state-in-react" aria-hidden="true">#</a> Understanding State in React</h2><ul><li><strong>State</strong>: Built-in React object used to contain data or information about the component</li><li><strong>useState</strong> hook allows adding state to Function Components <ul><li><strong>useState</strong> returns two things <ul><li>1: Current state</li><li>2: A function to update state</li></ul></li><li>Each instance of component has it&#39;s own state</li><li>How to share state between components? <ul><li>move state &quot;upwards&quot; (to a parent component)</li></ul></li></ul></li></ul><h2 id="getting-started-with-jsx-views-with-react" tabindex="-1"><a class="header-anchor" href="#getting-started-with-jsx-views-with-react" aria-hidden="true">#</a> Getting Started with JSX - Views with React</h2><ul><li>React projects use JSX for presentation</li><li>Stricter than HTML <ul><li><strong>Close tags</strong> are mandatory</li><li><strong>Only one top-level tag allowed:</strong><ul><li>Cannot return multiple top-level JSX tags</li><li>Wrap into a shared parent</li></ul></li></ul></li></ul><h2 id="define-css-in-jsx" tabindex="-1"><a class="header-anchor" href="#define-css-in-jsx" aria-hidden="true">#</a> Define CSS in JSX</h2><p>Options of styling our React components:</p><ol><li>style:</li></ol><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token operator">&lt;</span>button style<span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token literal-property property">borderRadius</span><span class="token operator">:</span> <span class="token string">&quot;30px&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>className:</li></ol><ul><li>import css file to the component file</li></ul><h2 id="what-s-happening-in-the-background-with-react" tabindex="-1"><a class="header-anchor" href="#what-s-happening-in-the-background-with-react" aria-hidden="true">#</a> What&#39;s happening in the background with React?</h2><ul><li>We updated the state =&gt; React updated the view <ul><li>How can we update an HTML element? <ul><li>A HTML page is represented by DOM (Document Object Model)</li><li>Each element in a HTML page is a node in the DOM</li><li>We need to update the DOM to update the element</li><li>However, writing code to update the DOM can be complex and slow</li></ul></li></ul></li><li>React takes a different approach: <ul><li>Virtual DOM: &quot;virtual&quot; representation of a UI (kept in memory) <ul><li>React code updates virtual DOM</li></ul></li><li>React identifies changes and synchronizes them to HTML page <ul><li><ol><li>React creates virtual DOM v1 on load of page</li></ol></li><li><ol start="2"><li>We perform an action</li></ol><ul><li><ol start="3"><li>React creates Virtual DOM v2 as a result of our action</li></ol></li><li><ol start="4"><li>React performs a diff between v1 and v2</li></ol></li><li><ol start="5"><li>React synchronizes changes (updates HTML page)</li></ol></li></ul></li></ul></li></ul></li><li>Summary: We are NOT updating the DOM directly</li><li>React identifies changes and efficiently updates the DOM</li></ul><h2 id="router-in-react" tabindex="-1"><a class="header-anchor" href="#router-in-react" aria-hidden="true">#</a> Router in React</h2><p>React Router enables navigation and handling of routes in a React application.</p><h3 id="browserrouter" tabindex="-1"><a class="header-anchor" href="#browserrouter" aria-hidden="true">#</a> <code>&lt;BrowserRouter&gt;</code></h3><p>The <code>&lt;BrowserRouter&gt;</code> component is the root component provided by React Router. It enables the use of client-side routing, allowing our React components to render based on the current URL.</p><h3 id="routes" tabindex="-1"><a class="header-anchor" href="#routes" aria-hidden="true">#</a> <code>&lt;Routes&gt;</code></h3><p>The <code>&lt;Routes&gt;</code> component is used to declare individual route configurations. It wraps the set of <code>&lt;Route&gt;</code> components and defines the route structure for our application.</p><h3 id="route" tabindex="-1"><a class="header-anchor" href="#route" aria-hidden="true">#</a> <code>&lt;Route&gt;</code></h3><p>Each <code>&lt;Route&gt;</code> component represents a route in our application. It has a <code>path</code> prop that specifies the URL for the route, and an <code>element</code> prop that defines the React component to render when the route matches.</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">BrowserRouter</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Routes</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/login<span class="token punctuation">&quot;</span></span> <span class="token attr-name">element</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LoginComponent</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/<span class="token punctuation">&quot;</span></span> <span class="token attr-name">element</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LoginComponent</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/welcome/:username<span class="token punctuation">&quot;</span></span> <span class="token attr-name">element</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">WelcomeComponent</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>*<span class="token punctuation">&quot;</span></span> <span class="token attr-name">element</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ErrorComponent</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/todos<span class="token punctuation">&quot;</span></span> <span class="token attr-name">element</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ListTodosComponent</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/logout<span class="token punctuation">&quot;</span></span> <span class="token attr-name">element</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LogoutComponent</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Routes</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">BrowserRouter</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>The <code>&lt;Route&gt;</code> with <code>path=&quot;*&quot;</code> is a catch-all route, meaning it will match any URL that hasn&#39;t matched previous routes.</li><li>The route <code>/welcome/:username</code> demonstrates the usage of a dynamic route where <code>:username</code> is a parameter that can be accessed in the <code>WelcomeComponent</code> using the <code>useParams</code> hook.</li></ul><h2 id="usenavigate" tabindex="-1"><a class="header-anchor" href="#usenavigate" aria-hidden="true">#</a> useNavigate()</h2><p>The <code>useNavigate</code> hook is part of the React Router library and is used for programmatic navigation in React applications. It provides a function that allows us to navigate to different routes within our application.</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useNavigate <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react-router-dom&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">MyComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Initialize the navigate function</span>
  <span class="token keyword">const</span> navigate <span class="token operator">=</span> <span class="token function">useNavigate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Example: Navigating on a button click</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handleButtonClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// Use the navigate function to go to a specific route</span>
    <span class="token function">navigate</span><span class="token punctuation">(</span><span class="token string">&quot;/welcome&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">My Component</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleButtonClick<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Go to Welcome Page</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> MyComponent<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In this example, when the button is clicked, the <code>handleButtonClick</code> function is called, and it uses the <code>navigate</code> function to navigate to the <code>/welcome</code> route.</p><h3 id="navigating-with-parameters" tabindex="-1"><a class="header-anchor" href="#navigating-with-parameters" aria-hidden="true">#</a> Navigating with Parameters</h3><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">const</span> <span class="token function-variable function">handleButtonClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> username <span class="token operator">=</span> <span class="token string">&quot;John&quot;</span><span class="token punctuation">;</span> <span class="token comment">// You can get this dynamically</span>
  <span class="token function">navigate</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/welcome/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>username<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This example navigates to the &#39;/welcome/john&#39; route, where &#39;John&#39; is a dynamic parameter</p><h2 id="useparams" tabindex="-1"><a class="header-anchor" href="#useparams" aria-hidden="true">#</a> useParams()</h2><p>The <code>useParams</code> hook is part of the React Router library and is used to access the parameters from the current route&#39;s path. This is particularly useful when dealing with dynamic routes where certain parts of the URL serve as placeholders for values.</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">function</span> <span class="token function">WelcomeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> params <span class="token operator">=</span> <span class="token function">useParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Welcome </span><span class="token punctuation">{</span>params<span class="token punctuation">.</span>username<span class="token punctuation">}</span><span class="token plain-text">!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        Manage Your todos - </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Link</span></span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/todos<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Go here</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Link</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>const params = useParams()</code>: this line uses the <code>useParams</code> hook to get the parameters from the current route. In our case, it extracts the username parameter.</li></ul><h2 id="link-in-react" tabindex="-1"><a class="header-anchor" href="#link-in-react" aria-hidden="true">#</a> Link in React</h2><p>The <code>Link</code> component is part of the <code>react-router-dom</code> library, and it&#39;s used in React applications to create navigation links that work with React Router. The purpose of the <code>Link</code> component is to provide a way to navigate between different views or pages without causing a full page upload.</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Link</span></span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/welcome<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Go to Welcome Page</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Link</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>In this example, clicking the link will navigate to the &quot;/welcome&quot; route.</p><h2 id="sharing-react-state-with-multiple-components-using-auth-context" tabindex="-1"><a class="header-anchor" href="#sharing-react-state-with-multiple-components-using-auth-context" aria-hidden="true">#</a> Sharing React State with multiple components using Auth Context</h2><p><strong>Contexts</strong> in React are a way to share values, such as state or functions, between components without passing props through every level of the component tree.</p><h3 id="create-authcontext" tabindex="-1"><a class="header-anchor" href="#create-authcontext" aria-hidden="true">#</a> Create <code>AuthContext</code>:</h3><p>The <code>createContext</code> function is called, and the result is stored in the constant <code>AuthContext</code>. This context can be used to share values across components.</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">export</span> <span class="token keyword">const</span> AuthContext <span class="token operator">=</span> <span class="token function">createContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="authcontext-provider" tabindex="-1"><a class="header-anchor" href="#authcontext-provider" aria-hidden="true">#</a> <code>AuthContext.Provider</code></h3><p>The <code>Provider</code> component is responsible for making the provided value accessible to all descendant components.</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token comment">//put some state in the context</span>
<span class="token comment">//share the created context with other components</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">AuthProvider</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> children <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>number<span class="token punctuation">,</span> setNumber<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AuthContext.Provider</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> number <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">AuthContext.Provider</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><code>value</code> Prop: The <code>value</code> prop is used to pass the actual value that we want to share within the context. In this case, it&#39;s an object with a property named <code>number</code>. The value of <code>number</code> is being passed as a prop to the <code>Provider</code>.</p></li><li><p><code>{children}</code>: The <code>childrem</code> prop represents the content that is wrapped by the <code>Provider</code>. In React, the <code>children</code> prop is a special prop that contains the content between the opening and closing tags of a component.</p></li></ul><h3 id="using-a-component-that-contains-authcontext-provider-to-wrap-its-children-and-provide-authentication-related-context-to-its-descendants-is-a-common-and-correct-pattern-in-react-applications" tabindex="-1"><a class="header-anchor" href="#using-a-component-that-contains-authcontext-provider-to-wrap-its-children-and-provide-authentication-related-context-to-its-descendants-is-a-common-and-correct-pattern-in-react-applications" aria-hidden="true">#</a> using a component that contains AuthContext.Provider to wrap its children and provide authentication-related context to its descendants is a common and correct pattern in React applications.</h3><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">BrowserRouter</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AuthProvider</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">HeaderComponent</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Routes</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/login<span class="token punctuation">&quot;</span></span> <span class="token attr-name">element</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LoginComponent</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/<span class="token punctuation">&quot;</span></span> <span class="token attr-name">element</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LoginComponent</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/welcome/:username<span class="token punctuation">&quot;</span></span> <span class="token attr-name">element</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">WelcomeComponent</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>*<span class="token punctuation">&quot;</span></span> <span class="token attr-name">element</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ErrorComponent</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/todos<span class="token punctuation">&quot;</span></span> <span class="token attr-name">element</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ListTodosComponent</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Route</span></span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/logout<span class="token punctuation">&quot;</span></span> <span class="token attr-name">element</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LogoutComponent</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">}</span></span> <span class="token punctuation">/&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Routes</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">AuthProvider</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">BrowserRouter</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>the <code>AuthProvider</code> component we just created in the previous section can be used to wrap its children and provide context to its descendants.</li></ul><h3 id="access-the-global-value-from-using-the-context-in-other-components" tabindex="-1"><a class="header-anchor" href="#access-the-global-value-from-using-the-context-in-other-components" aria-hidden="true">#</a> Access the global value from using the context in other components</h3><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token comment">// ExampleComponent.js</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useContext <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> AuthContext <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./AuthProvider&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">ExampleComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> authContext <span class="token operator">=</span> <span class="token function">useContext</span><span class="token punctuation">(</span>AuthContext<span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;AuthContext number:&quot;</span><span class="token punctuation">,</span> authContext<span class="token punctuation">.</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token comment">/* Your component rendering logic */</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In this example, <code>ExampleComponent</code> is using the <code>useContext</code> hook to access the <code>AuthContext</code> and log the <code>number</code> property.</p>`,66),c=[o];function l(i,u){return a(),s("div",null,c)}const d=n(p,[["render",l],["__file","react.html.vue"]]);export{d as default};
