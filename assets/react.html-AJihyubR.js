import{_ as e,o as t,c as a,e as i}from"./app-Rgf3V-21.js";const l="/assets/images/component.png",n={},o=i('<h1 id="react" tabindex="-1"><a class="header-anchor" href="#react" aria-hidden="true">#</a> React</h1><h2 id="what-is-react" tabindex="-1"><a class="header-anchor" href="#what-is-react" aria-hidden="true">#</a> What is React?</h2><ul><li><p>React is one of the most popular JavaScript libraries to build SPA (Single Page Applications)</p><ul><li>Popular alternatives: Angular, VueJS</li></ul></li><li><p>Open-source project created by Facebook</p></li><li><p>Component-based</p></li><li><p>Mostly used to build front-end web SPA applications</p><ul><li>Can also be used to create native apps for Android, iOS (React Native)</li></ul></li></ul><h2 id="creating-react-app-with-create-react-app" tabindex="-1"><a class="header-anchor" href="#creating-react-app-with-create-react-app" aria-hidden="true">#</a> Creating React App with Create React App</h2><ul><li>Prerequisite: Latest version of Node JS <ul><li>NPM - package manager: install, delete, and update JS packages</li><li>NPX - package executer: Execute JS packages directly, without installing</li></ul></li><li>Let&#39;s get started: <ul><li>cd our_folder</li><li>npx create-react-app todo-app</li><li>cd todo-app</li><li>npm start</li></ul></li></ul><h2 id="important-commands" tabindex="-1"><a class="header-anchor" href="#important-commands" aria-hidden="true">#</a> Important Commands:</h2><ul><li><strong>npm start:</strong> runs the apps in development mode</li><li><strong>npm test:</strong> run unit tests</li><li><strong>npm run build:</strong> build a production deployable unit</li><li><strong>npm install:</strong> add a dependency to our projects</li></ul><h2 id="exploring-create-react-app-folder-structure" tabindex="-1"><a class="header-anchor" href="#exploring-create-react-app-folder-structure" aria-hidden="true">#</a> Exploring Create React App Folder Structure</h2><ul><li><strong>README.md</strong>: documentation</li><li><strong>package.json</strong>: define dependencies (similar to pom.xml)</li><li><strong>node_modules</strong>: folder where all the dependencies are downloaded to</li><li><strong>React Initialization</strong>: <ul><li>public/index.html: contains root div</li><li>src/index.js: intialize React App. Loads App component <ul><li>src/index.css - styling for entire application</li></ul></li><li>src/App.js: code for app component <ul><li>src/App.css - styling for app component</li><li>src/App.test.js - unit tests for App component</li></ul></li></ul></li></ul><h2 id="why-do-we-need-react-components" tabindex="-1"><a class="header-anchor" href="#why-do-we-need-react-components" aria-hidden="true">#</a> Why do we need React components?</h2><ul><li><p>Web applications have complex structure</p><ul><li>Menu, Header, Footer, Welcome Page, Login Page, Logout Page, Todo Page etc</li></ul></li><li><p>Components help us modularize React apps</p><ul><li>Create separate components for each page element <ul><li>Menu Component</li><li>Header Component</li><li>Footer Component</li><li>...</li></ul></li><li>Why? <ul><li>Modularization</li><li>Reuse</li></ul></li></ul></li></ul><h2 id="understanding-react-components" tabindex="-1"><a class="header-anchor" href="#understanding-react-components" aria-hidden="true">#</a> Understanding React Components</h2><ul><li><p>First component typically loaded in React Apps: App Component</p></li><li><p>Parts of a Component</p><ul><li>View (JSX or JavaScript)</li><li>Logic (JavaScript)</li><li>Styling (CSS)</li><li>State (Internal Data Store)</li><li>Props (Pass Data)</li></ul></li><li><p>React component names must always start with a capital letter</p></li></ul><figure><img src="'+l+'" alt="React Component" tabindex="0" loading="lazy"><figcaption>React Component</figcaption></figure><h2 id="understanding-state-in-react" tabindex="-1"><a class="header-anchor" href="#understanding-state-in-react" aria-hidden="true">#</a> Understanding State in React</h2><ul><li><strong>State</strong>: Built-in React object used to contain data or information about the component</li><li><strong>useState</strong> hook allows adding state to Function Components <ul><li><strong>useState</strong> returns two things <ul><li>1: Current state</li><li>2: A function to update state</li></ul></li><li>Each instance of component has it&#39;s own state</li><li>How to share state between components? <ul><li>move state &quot;upwards&quot; (to a parent component)</li></ul></li></ul></li></ul><h2 id="getting-started-with-jsx-views-with-react" tabindex="-1"><a class="header-anchor" href="#getting-started-with-jsx-views-with-react" aria-hidden="true">#</a> Getting Started with JSX - Views with React</h2><ul><li>React projects use JSX for presentation</li><li>Stricter than HTML <ul><li><strong>Close tags</strong> are mandatory</li><li><strong>Only one top-level tag allowed:</strong><ul><li>Cannot return multiple top-level JSX tags</li><li>Wrap into a shared parent</li></ul></li></ul></li></ul>',18),r=[o];function s(p,c){return t(),a("div",null,r)}const u=e(n,[["render",s],["__file","react.html.vue"]]);export{u as default};
