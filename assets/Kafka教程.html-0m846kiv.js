const e=JSON.parse('{"key":"v-03d029fc","path":"/quant-platform/Kafka%E6%95%99%E7%A8%8B.html","title":"Kafka 教程 - 量化交易平台实战","lang":"en-US","frontmatter":{"description":"Kafka 教程 - 量化交易平台实战 什么是 Kafka？ Kafka 是一个分布式消息队列（消息中间件），可以理解为微服务之间的快递系统。 形象比喻 没有Kafka：Python数据服务获取股票数据后，要主动通知所有需要的服务（数据分析、策略、前端），其中一个服务挂了就会丢数据 有Kafka：Python把数据扔到Kafka，各个服务自己来取，谁挂了重启后继续取，不会丢失","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/YC-Tech-Blog/quant-platform/Kafka%E6%95%99%E7%A8%8B.html"}],["meta",{"property":"og:site_name","content":"YC Tech Blog"}],["meta",{"property":"og:title","content":"Kafka 教程 - 量化交易平台实战"}],["meta",{"property":"og:description","content":"Kafka 教程 - 量化交易平台实战 什么是 Kafka？ Kafka 是一个分布式消息队列（消息中间件），可以理解为微服务之间的快递系统。 形象比喻 没有Kafka：Python数据服务获取股票数据后，要主动通知所有需要的服务（数据分析、策略、前端），其中一个服务挂了就会丢数据 有Kafka：Python把数据扔到Kafka，各个服务自己来取，谁挂了重启后继续取，不会丢失"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-10-25T14:10:36.000Z"}],["meta",{"property":"article:author","content":"Youwei Chen"}],["meta",{"property":"article:modified_time","content":"2025-10-25T14:10:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Kafka 教程 - 量化交易平台实战\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-25T14:10:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Youwei Chen\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"什么是 Kafka？","slug":"什么是-kafka","link":"#什么是-kafka","children":[{"level":3,"title":"形象比喻","slug":"形象比喻","link":"#形象比喻","children":[]}]},{"level":2,"title":"在你的量化交易平台中的作用","slug":"在你的量化交易平台中的作用","link":"#在你的量化交易平台中的作用","children":[{"level":3,"title":"核心场景","slug":"核心场景","link":"#核心场景","children":[]}]},{"level":2,"title":"Kafka 核心概念","slug":"kafka-核心概念","link":"#kafka-核心概念","children":[{"level":3,"title":"1. Topic（主题）","slug":"_1-topic-主题","link":"#_1-topic-主题","children":[]},{"level":3,"title":"2. Producer（生产者）","slug":"_2-producer-生产者","link":"#_2-producer-生产者","children":[]},{"level":3,"title":"3. Consumer（消费者）","slug":"_3-consumer-消费者","link":"#_3-consumer-消费者","children":[]},{"level":3,"title":"4. Partition（分区）","slug":"_4-partition-分区","link":"#_4-partition-分区","children":[]},{"level":3,"title":"5. Consumer Group（消费者组）","slug":"_5-consumer-group-消费者组","link":"#_5-consumer-group-消费者组","children":[]}]},{"level":2,"title":"实战：使用你的 Docker Kafka","slug":"实战-使用你的-docker-kafka","link":"#实战-使用你的-docker-kafka","children":[{"level":3,"title":"1. 启动 Kafka（会自动启动 Zookeeper）","slug":"_1-启动-kafka-会自动启动-zookeeper","link":"#_1-启动-kafka-会自动启动-zookeeper","children":[]},{"level":3,"title":"2. 验证 Kafka 是否启动","slug":"_2-验证-kafka-是否启动","link":"#_2-验证-kafka-是否启动","children":[]},{"level":3,"title":"3. 进入 Kafka 容器","slug":"_3-进入-kafka-容器","link":"#_3-进入-kafka-容器","children":[]}]},{"level":2,"title":"Kafka 命令行工具实战","slug":"kafka-命令行工具实战","link":"#kafka-命令行工具实战","children":[{"level":3,"title":"1. Topic 管理","slug":"_1-topic-管理","link":"#_1-topic-管理","children":[]},{"level":3,"title":"2. 生产者（发送消息）","slug":"_2-生产者-发送消息","link":"#_2-生产者-发送消息","children":[]},{"level":3,"title":"3. 消费者（接收消息）","slug":"_3-消费者-接收消息","link":"#_3-消费者-接收消息","children":[]}]},{"level":2,"title":"实战练习：模拟量化交易数据流","slug":"实战练习-模拟量化交易数据流","link":"#实战练习-模拟量化交易数据流","children":[{"level":3,"title":"练习1：实时行情推送","slug":"练习1-实时行情推送","link":"#练习1-实时行情推送","children":[]},{"level":3,"title":"练习2：交易信号传递","slug":"练习2-交易信号传递","link":"#练习2-交易信号传递","children":[]},{"level":3,"title":"练习3：查看消费者组状态","slug":"练习3-查看消费者组状态","link":"#练习3-查看消费者组状态","children":[]}]},{"level":2,"title":"Kafka 在项目中的实际应用","slug":"kafka-在项目中的实际应用","link":"#kafka-在项目中的实际应用","children":[{"level":3,"title":"应用1：Python 生产者（发送股票数据）","slug":"应用1-python-生产者-发送股票数据","link":"#应用1-python-生产者-发送股票数据","children":[]},{"level":3,"title":"应用2：Java 消费者（接收股票数据）","slug":"应用2-java-消费者-接收股票数据","link":"#应用2-java-消费者-接收股票数据","children":[]},{"level":3,"title":"应用3：多个服务消费同一消息","slug":"应用3-多个服务消费同一消息","link":"#应用3-多个服务消费同一消息","children":[]}]},{"level":2,"title":"Kafka UI 可视化管理","slug":"kafka-ui-可视化管理","link":"#kafka-ui-可视化管理","children":[{"level":3,"title":"1. 启动 Kafka UI","slug":"_1-启动-kafka-ui","link":"#_1-启动-kafka-ui","children":[]},{"level":3,"title":"2. 访问 Web 界面","slug":"_2-访问-web-界面","link":"#_2-访问-web-界面","children":[]},{"level":3,"title":"3. 功能","slug":"_3-功能","link":"#_3-功能","children":[]}]},{"level":2,"title":"Kafka 常用命令速查表","slug":"kafka-常用命令速查表","link":"#kafka-常用命令速查表","children":[]},{"level":2,"title":"Docker 配置说明","slug":"docker-配置说明","link":"#docker-配置说明","children":[{"level":3,"title":"docker-compose.yml 解析","slug":"docker-compose-yml-解析","link":"#docker-compose-yml-解析","children":[]},{"level":3,"title":"连接方式","slug":"连接方式","link":"#连接方式","children":[]}]},{"level":2,"title":"常见问题","slug":"常见问题","link":"#常见问题","children":[{"level":3,"title":"Q1: 如何查看某个Topic有多少消息？","slug":"q1-如何查看某个topic有多少消息","link":"#q1-如何查看某个topic有多少消息","children":[]},{"level":3,"title":"Q2: 消息会永久保存吗？","slug":"q2-消息会永久保存吗","link":"#q2-消息会永久保存吗","children":[]},{"level":3,"title":"Q3: 如何清空Topic数据？","slug":"q3-如何清空topic数据","link":"#q3-如何清空topic数据","children":[]},{"level":3,"title":"Q4: 如何保证消息不丢失？","slug":"q4-如何保证消息不丢失","link":"#q4-如何保证消息不丢失","children":[]}]},{"level":2,"title":"性能优化建议","slug":"性能优化建议","link":"#性能优化建议","children":[]},{"level":2,"title":"下一步学习","slug":"下一步学习","link":"#下一步学习","children":[]},{"level":2,"title":"参考资源","slug":"参考资源","link":"#参考资源","children":[]}],"git":{"createdTime":1761401436000,"updatedTime":1761401436000,"contributors":[{"name":"Youwei Chen","email":"youweichen0208@gmail.com","commits":1}]},"readingTime":{"minutes":7.68,"words":2305},"filePathRelative":"quant-platform/Kafka教程.md","localizedDate":"October 25, 2025","excerpt":"<h1> Kafka 教程 - 量化交易平台实战</h1>\\n<h2> 什么是 Kafka？</h2>\\n<p><strong>Kafka</strong> 是一个分布式消息队列（消息中间件），可以理解为<strong>微服务之间的快递系统</strong>。</p>\\n<h3> 形象比喻</h3>\\n<ul>\\n<li><strong>没有Kafka</strong>：Python数据服务获取股票数据后，要主动通知所有需要的服务（数据分析、策略、前端），其中一个服务挂了就会丢数据</li>\\n<li><strong>有Kafka</strong>：Python把数据扔到Kafka，各个服务自己来取，谁挂了重启后继续取，不会丢失</li>\\n</ul>","autoDesc":true}');export{e as data};
